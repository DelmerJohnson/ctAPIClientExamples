//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace client.financial.accountsPayable.maintenance.vendorMaintenance.ctDynamicsSL.common {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="commonSoap", Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class common : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ctDynamicsSLHeader ctDynamicsSLHeaderValueField;
        
        private System.Threading.SendOrPostCallback getLCCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLCCodesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback aboutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompaniesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewcompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompaniesOperationCompleted;
        
        private System.Threading.SendOrPostCallback editVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback editVendorAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVendorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVendorsAsDataSetXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVendorsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSnoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSnoteAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback linkSnoteAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewSnoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSnotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSnotesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLOVByTypeAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback customSQLCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback customSQLCallAsXmlDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback customSQLCallAlternateConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback customSQLCallAlternateConnectionAsXmlDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSalespersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSalespersonAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewSalespersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSalespersonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSalespersonsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSalesTaxesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSalesTaxesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback editStateAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback editCountryAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountriesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSegDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSegDefAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewSegDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSegDefsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSegDefsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback editAccountAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSubAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSubAcctAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewSubAcctOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubAcctsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubAcctsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback editBatchAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTermsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTermsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewTermsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTermsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTermsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSlsTaxCatOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSlsTaxCatAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewSlsTaxCatOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSlsTaxCatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSlsTaxCatsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editAcctXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback editAcctXrefAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewAcctXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAcctXrefsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAcctXrefsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSubXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback editSubXrefAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewSubXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubXrefsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubXrefsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback editLCCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback editLCCodeAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewLCCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback pingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public common() {
            this.Url = global::client.financial.accountsPayable.maintenance.vendorMaintenance.Properties.Settings.Default.client_financial_accountsPayable_maintenance_vendorMaintenance_ctDynamicsSL_common_common;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ctDynamicsSLHeader ctDynamicsSLHeaderValue {
            get {
                return this.ctDynamicsSLHeaderValueField;
            }
            set {
                this.ctDynamicsSLHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getLCCodesCompletedEventHandler getLCCodesCompleted;
        
        /// <remarks/>
        public event getLCCodesAsDataSetCompletedEventHandler getLCCodesAsDataSetCompleted;
        
        /// <remarks/>
        public event aboutCompletedEventHandler aboutCompleted;
        
        /// <remarks/>
        public event getCompaniesAsDataSetCompletedEventHandler getCompaniesAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewcompanyCompletedEventHandler getNewcompanyCompleted;
        
        /// <remarks/>
        public event getCompaniesCompletedEventHandler getCompaniesCompleted;
        
        /// <remarks/>
        public event editVendorCompletedEventHandler editVendorCompleted;
        
        /// <remarks/>
        public event editVendorAsDataSetCompletedEventHandler editVendorAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewVendorCompletedEventHandler getNewVendorCompleted;
        
        /// <remarks/>
        public event getVendorsCompletedEventHandler getVendorsCompleted;
        
        /// <remarks/>
        public event getVendorsAsDataSetXMLCompletedEventHandler getVendorsAsDataSetXMLCompleted;
        
        /// <remarks/>
        public event getVendorsAsDataSetCompletedEventHandler getVendorsAsDataSetCompleted;
        
        /// <remarks/>
        public event editSnoteCompletedEventHandler editSnoteCompleted;
        
        /// <remarks/>
        public event editSnoteAsDataSetCompletedEventHandler editSnoteAsDataSetCompleted;
        
        /// <remarks/>
        public event linkSnoteAsDataSetCompletedEventHandler linkSnoteAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewSnoteCompletedEventHandler getNewSnoteCompleted;
        
        /// <remarks/>
        public event getSnotesCompletedEventHandler getSnotesCompleted;
        
        /// <remarks/>
        public event getSnotesAsDataSetCompletedEventHandler getSnotesAsDataSetCompleted;
        
        /// <remarks/>
        public event getLOVByTypeAsDataSetCompletedEventHandler getLOVByTypeAsDataSetCompleted;
        
        /// <remarks/>
        public event getNextCounterCompletedEventHandler getNextCounterCompleted;
        
        /// <remarks/>
        public event customSQLCallCompletedEventHandler customSQLCallCompleted;
        
        /// <remarks/>
        public event customSQLCallAsXmlDocumentCompletedEventHandler customSQLCallAsXmlDocumentCompleted;
        
        /// <remarks/>
        public event customSQLCallAlternateConnectionCompletedEventHandler customSQLCallAlternateConnectionCompleted;
        
        /// <remarks/>
        public event customSQLCallAlternateConnectionAsXmlDocumentCompletedEventHandler customSQLCallAlternateConnectionAsXmlDocumentCompleted;
        
        /// <remarks/>
        public event editSalespersonCompletedEventHandler editSalespersonCompleted;
        
        /// <remarks/>
        public event editSalespersonAsDataSetCompletedEventHandler editSalespersonAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewSalespersonCompletedEventHandler getNewSalespersonCompleted;
        
        /// <remarks/>
        public event getSalespersonsCompletedEventHandler getSalespersonsCompleted;
        
        /// <remarks/>
        public event getSalespersonsAsDataSetCompletedEventHandler getSalespersonsAsDataSetCompleted;
        
        /// <remarks/>
        public event getSalesTaxesCompletedEventHandler getSalesTaxesCompleted;
        
        /// <remarks/>
        public event getSalesTaxesAsDataSetCompletedEventHandler getSalesTaxesAsDataSetCompleted;
        
        /// <remarks/>
        public event editStateCompletedEventHandler editStateCompleted;
        
        /// <remarks/>
        public event editStateAsDataSetCompletedEventHandler editStateAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewStateCompletedEventHandler getNewStateCompleted;
        
        /// <remarks/>
        public event getStatesCompletedEventHandler getStatesCompleted;
        
        /// <remarks/>
        public event getStatesAsDataSetCompletedEventHandler getStatesAsDataSetCompleted;
        
        /// <remarks/>
        public event editCountryCompletedEventHandler editCountryCompleted;
        
        /// <remarks/>
        public event editCountryAsDataSetCompletedEventHandler editCountryAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewCountryCompletedEventHandler getNewCountryCompleted;
        
        /// <remarks/>
        public event getCountriesCompletedEventHandler getCountriesCompleted;
        
        /// <remarks/>
        public event getCountriesAsDataSetCompletedEventHandler getCountriesAsDataSetCompleted;
        
        /// <remarks/>
        public event editSegDefCompletedEventHandler editSegDefCompleted;
        
        /// <remarks/>
        public event editSegDefAsDataSetCompletedEventHandler editSegDefAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewSegDefCompletedEventHandler getNewSegDefCompleted;
        
        /// <remarks/>
        public event getSegDefsCompletedEventHandler getSegDefsCompleted;
        
        /// <remarks/>
        public event getSegDefsAsDataSetCompletedEventHandler getSegDefsAsDataSetCompleted;
        
        /// <remarks/>
        public event editAccountCompletedEventHandler editAccountCompleted;
        
        /// <remarks/>
        public event editAccountAsDataSetCompletedEventHandler editAccountAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewAccountCompletedEventHandler getNewAccountCompleted;
        
        /// <remarks/>
        public event getAccountsCompletedEventHandler getAccountsCompleted;
        
        /// <remarks/>
        public event getAccountsAsDataSetCompletedEventHandler getAccountsAsDataSetCompleted;
        
        /// <remarks/>
        public event editSubAcctCompletedEventHandler editSubAcctCompleted;
        
        /// <remarks/>
        public event editSubAcctAsDataSetCompletedEventHandler editSubAcctAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewSubAcctCompletedEventHandler getNewSubAcctCompleted;
        
        /// <remarks/>
        public event getSubAcctsCompletedEventHandler getSubAcctsCompleted;
        
        /// <remarks/>
        public event getSubAcctsAsDataSetCompletedEventHandler getSubAcctsAsDataSetCompleted;
        
        /// <remarks/>
        public event editBatchCompletedEventHandler editBatchCompleted;
        
        /// <remarks/>
        public event editBatchAsDataSetCompletedEventHandler editBatchAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewBatchCompletedEventHandler getNewBatchCompleted;
        
        /// <remarks/>
        public event getBatchesCompletedEventHandler getBatchesCompleted;
        
        /// <remarks/>
        public event getBatchesAsDataSetCompletedEventHandler getBatchesAsDataSetCompleted;
        
        /// <remarks/>
        public event editTermsCompletedEventHandler editTermsCompleted;
        
        /// <remarks/>
        public event editTermsAsDataSetCompletedEventHandler editTermsAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewTermsCompletedEventHandler getNewTermsCompleted;
        
        /// <remarks/>
        public event getTermsCompletedEventHandler getTermsCompleted;
        
        /// <remarks/>
        public event getTermsAsDataSetCompletedEventHandler getTermsAsDataSetCompleted;
        
        /// <remarks/>
        public event editSlsTaxCatCompletedEventHandler editSlsTaxCatCompleted;
        
        /// <remarks/>
        public event editSlsTaxCatAsDataSetCompletedEventHandler editSlsTaxCatAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewSlsTaxCatCompletedEventHandler getNewSlsTaxCatCompleted;
        
        /// <remarks/>
        public event getSlsTaxCatsCompletedEventHandler getSlsTaxCatsCompleted;
        
        /// <remarks/>
        public event getSlsTaxCatsAsDataSetCompletedEventHandler getSlsTaxCatsAsDataSetCompleted;
        
        /// <remarks/>
        public event editAcctXrefCompletedEventHandler editAcctXrefCompleted;
        
        /// <remarks/>
        public event editAcctXrefAsDataSetCompletedEventHandler editAcctXrefAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewAcctXrefCompletedEventHandler getNewAcctXrefCompleted;
        
        /// <remarks/>
        public event getAcctXrefsCompletedEventHandler getAcctXrefsCompleted;
        
        /// <remarks/>
        public event getAcctXrefsAsDataSetCompletedEventHandler getAcctXrefsAsDataSetCompleted;
        
        /// <remarks/>
        public event editSubXrefCompletedEventHandler editSubXrefCompleted;
        
        /// <remarks/>
        public event editSubXrefAsDataSetCompletedEventHandler editSubXrefAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewSubXrefCompletedEventHandler getNewSubXrefCompleted;
        
        /// <remarks/>
        public event getSubXrefsCompletedEventHandler getSubXrefsCompleted;
        
        /// <remarks/>
        public event getSubXrefsAsDataSetCompletedEventHandler getSubXrefsAsDataSetCompleted;
        
        /// <remarks/>
        public event editLCCodeCompletedEventHandler editLCCodeCompleted;
        
        /// <remarks/>
        public event editLCCodeAsDataSetCompletedEventHandler editLCCodeAsDataSetCompleted;
        
        /// <remarks/>
        public event getNewLCCodeCompletedEventHandler getNewLCCodeCompleted;
        
        /// <remarks/>
        public event pingCompletedEventHandler pingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getLCCodes", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LCCodeClass[] getLCCodes(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getLCCodes", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((LCCodeClass[])(results[0]));
        }
        
        /// <remarks/>
        public void getLCCodesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getLCCodesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getLCCodesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getLCCodesOperationCompleted == null)) {
                this.getLCCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLCCodesOperationCompleted);
            }
            this.InvokeAsync("getLCCodes", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getLCCodesOperationCompleted, userState);
        }
        
        private void OngetLCCodesOperationCompleted(object arg) {
            if ((this.getLCCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLCCodesCompleted(this, new getLCCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getLCCodesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getLCCodesAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getLCCodesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getLCCodesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getLCCodesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getLCCodesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getLCCodesAsDataSetOperationCompleted == null)) {
                this.getLCCodesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLCCodesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getLCCodesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getLCCodesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetLCCodesAsDataSetOperationCompleted(object arg) {
            if ((this.getLCCodesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLCCodesAsDataSetCompleted(this, new getLCCodesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/about", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string about() {
            object[] results = this.Invoke("about", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aboutAsync() {
            this.aboutAsync(null);
        }
        
        /// <remarks/>
        public void aboutAsync(object userState) {
            if ((this.aboutOperationCompleted == null)) {
                this.aboutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaboutOperationCompleted);
            }
            this.InvokeAsync("about", new object[0], this.aboutOperationCompleted, userState);
        }
        
        private void OnaboutOperationCompleted(object arg) {
            if ((this.aboutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aboutCompleted(this, new aboutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getCompaniesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCompaniesAsDataSet(int currentPageNumber, int pageSize, string parms) {
            object[] results = this.Invoke("getCompaniesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCompaniesAsDataSetAsync(int currentPageNumber, int pageSize, string parms) {
            this.getCompaniesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getCompaniesAsDataSetAsync(int currentPageNumber, int pageSize, string parms, object userState) {
            if ((this.getCompaniesAsDataSetOperationCompleted == null)) {
                this.getCompaniesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompaniesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getCompaniesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getCompaniesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetCompaniesAsDataSetOperationCompleted(object arg) {
            if ((this.getCompaniesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompaniesAsDataSetCompleted(this, new getCompaniesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewcompany", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public company getNewcompany() {
            object[] results = this.Invoke("getNewcompany", new object[0]);
            return ((company)(results[0]));
        }
        
        /// <remarks/>
        public void getNewcompanyAsync() {
            this.getNewcompanyAsync(null);
        }
        
        /// <remarks/>
        public void getNewcompanyAsync(object userState) {
            if ((this.getNewcompanyOperationCompleted == null)) {
                this.getNewcompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewcompanyOperationCompleted);
            }
            this.InvokeAsync("getNewcompany", new object[0], this.getNewcompanyOperationCompleted, userState);
        }
        
        private void OngetNewcompanyOperationCompleted(object arg) {
            if ((this.getNewcompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewcompanyCompleted(this, new getNewcompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getCompanies", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public company[] getCompanies(int currentPageNumber, int pageSize, string parms) {
            object[] results = this.Invoke("getCompanies", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((company[])(results[0]));
        }
        
        /// <remarks/>
        public void getCompaniesAsync(int currentPageNumber, int pageSize, string parms) {
            this.getCompaniesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getCompaniesAsync(int currentPageNumber, int pageSize, string parms, object userState) {
            if ((this.getCompaniesOperationCompleted == null)) {
                this.getCompaniesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompaniesOperationCompleted);
            }
            this.InvokeAsync("getCompanies", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getCompaniesOperationCompleted, userState);
        }
        
        private void OngetCompaniesOperationCompleted(object arg) {
            if ((this.getCompaniesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompaniesCompleted(this, new getCompaniesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editVendor", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor editVendor(string actionType, Vendor inItem) {
            object[] results = this.Invoke("editVendor", new object[] {
                        actionType,
                        inItem});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void editVendorAsync(string actionType, Vendor inItem) {
            this.editVendorAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editVendorAsync(string actionType, Vendor inItem, object userState) {
            if ((this.editVendorOperationCompleted == null)) {
                this.editVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditVendorOperationCompleted);
            }
            this.InvokeAsync("editVendor", new object[] {
                        actionType,
                        inItem}, this.editVendorOperationCompleted, userState);
        }
        
        private void OneditVendorOperationCompleted(object arg) {
            if ((this.editVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editVendorCompleted(this, new editVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editVendorAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editVendorAsDataSet(string actionType, Vendor inItem) {
            object[] results = this.Invoke("editVendorAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editVendorAsDataSetAsync(string actionType, Vendor inItem) {
            this.editVendorAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editVendorAsDataSetAsync(string actionType, Vendor inItem, object userState) {
            if ((this.editVendorAsDataSetOperationCompleted == null)) {
                this.editVendorAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditVendorAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editVendorAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editVendorAsDataSetOperationCompleted, userState);
        }
        
        private void OneditVendorAsDataSetOperationCompleted(object arg) {
            if ((this.editVendorAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editVendorAsDataSetCompleted(this, new editVendorAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewVendor", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor getNewVendor(Vendor inTemplate) {
            object[] results = this.Invoke("getNewVendor", new object[] {
                        inTemplate});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void getNewVendorAsync(Vendor inTemplate) {
            this.getNewVendorAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewVendorAsync(Vendor inTemplate, object userState) {
            if ((this.getNewVendorOperationCompleted == null)) {
                this.getNewVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewVendorOperationCompleted);
            }
            this.InvokeAsync("getNewVendor", new object[] {
                        inTemplate}, this.getNewVendorOperationCompleted, userState);
        }
        
        private void OngetNewVendorOperationCompleted(object arg) {
            if ((this.getNewVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewVendorCompleted(this, new getNewVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getVendors", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] getVendors(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getVendors", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void getVendorsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getVendorsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getVendorsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getVendorsOperationCompleted == null)) {
                this.getVendorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVendorsOperationCompleted);
            }
            this.InvokeAsync("getVendors", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getVendorsOperationCompleted, userState);
        }
        
        private void OngetVendorsOperationCompleted(object arg) {
            if ((this.getVendorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVendorsCompleted(this, new getVendorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getVendorsAsDataSetXML", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getVendorsAsDataSetXML(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getVendorsAsDataSetXML", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getVendorsAsDataSetXMLAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getVendorsAsDataSetXMLAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getVendorsAsDataSetXMLAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getVendorsAsDataSetXMLOperationCompleted == null)) {
                this.getVendorsAsDataSetXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVendorsAsDataSetXMLOperationCompleted);
            }
            this.InvokeAsync("getVendorsAsDataSetXML", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getVendorsAsDataSetXMLOperationCompleted, userState);
        }
        
        private void OngetVendorsAsDataSetXMLOperationCompleted(object arg) {
            if ((this.getVendorsAsDataSetXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVendorsAsDataSetXMLCompleted(this, new getVendorsAsDataSetXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getVendorsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getVendorsAsDataSet(int currentPageNumber, int pageSize, string parms) {
            object[] results = this.Invoke("getVendorsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getVendorsAsDataSetAsync(int currentPageNumber, int pageSize, string parms) {
            this.getVendorsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getVendorsAsDataSetAsync(int currentPageNumber, int pageSize, string parms, object userState) {
            if ((this.getVendorsAsDataSetOperationCompleted == null)) {
                this.getVendorsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVendorsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getVendorsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getVendorsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetVendorsAsDataSetOperationCompleted(object arg) {
            if ((this.getVendorsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVendorsAsDataSetCompleted(this, new getVendorsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSnote", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snote editSnote(string actionType, Snote inSnote) {
            object[] results = this.Invoke("editSnote", new object[] {
                        actionType,
                        inSnote});
            return ((Snote)(results[0]));
        }
        
        /// <remarks/>
        public void editSnoteAsync(string actionType, Snote inSnote) {
            this.editSnoteAsync(actionType, inSnote, null);
        }
        
        /// <remarks/>
        public void editSnoteAsync(string actionType, Snote inSnote, object userState) {
            if ((this.editSnoteOperationCompleted == null)) {
                this.editSnoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSnoteOperationCompleted);
            }
            this.InvokeAsync("editSnote", new object[] {
                        actionType,
                        inSnote}, this.editSnoteOperationCompleted, userState);
        }
        
        private void OneditSnoteOperationCompleted(object arg) {
            if ((this.editSnoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSnoteCompleted(this, new editSnoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSnoteAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editSnoteAsDataSet(string actionType, Snote inSnote) {
            object[] results = this.Invoke("editSnoteAsDataSet", new object[] {
                        actionType,
                        inSnote});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editSnoteAsDataSetAsync(string actionType, Snote inSnote) {
            this.editSnoteAsDataSetAsync(actionType, inSnote, null);
        }
        
        /// <remarks/>
        public void editSnoteAsDataSetAsync(string actionType, Snote inSnote, object userState) {
            if ((this.editSnoteAsDataSetOperationCompleted == null)) {
                this.editSnoteAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSnoteAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editSnoteAsDataSet", new object[] {
                        actionType,
                        inSnote}, this.editSnoteAsDataSetOperationCompleted, userState);
        }
        
        private void OneditSnoteAsDataSetOperationCompleted(object arg) {
            if ((this.editSnoteAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSnoteAsDataSetCompleted(this, new editSnoteAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/linkSnoteAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet linkSnoteAsDataSet(string tableName, int noteID, nameValuePairs[] parms) {
            object[] results = this.Invoke("linkSnoteAsDataSet", new object[] {
                        tableName,
                        noteID,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void linkSnoteAsDataSetAsync(string tableName, int noteID, nameValuePairs[] parms) {
            this.linkSnoteAsDataSetAsync(tableName, noteID, parms, null);
        }
        
        /// <remarks/>
        public void linkSnoteAsDataSetAsync(string tableName, int noteID, nameValuePairs[] parms, object userState) {
            if ((this.linkSnoteAsDataSetOperationCompleted == null)) {
                this.linkSnoteAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlinkSnoteAsDataSetOperationCompleted);
            }
            this.InvokeAsync("linkSnoteAsDataSet", new object[] {
                        tableName,
                        noteID,
                        parms}, this.linkSnoteAsDataSetOperationCompleted, userState);
        }
        
        private void OnlinkSnoteAsDataSetOperationCompleted(object arg) {
            if ((this.linkSnoteAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.linkSnoteAsDataSetCompleted(this, new linkSnoteAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewSnote", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snote getNewSnote() {
            object[] results = this.Invoke("getNewSnote", new object[0]);
            return ((Snote)(results[0]));
        }
        
        /// <remarks/>
        public void getNewSnoteAsync() {
            this.getNewSnoteAsync(null);
        }
        
        /// <remarks/>
        public void getNewSnoteAsync(object userState) {
            if ((this.getNewSnoteOperationCompleted == null)) {
                this.getNewSnoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewSnoteOperationCompleted);
            }
            this.InvokeAsync("getNewSnote", new object[0], this.getNewSnoteOperationCompleted, userState);
        }
        
        private void OngetNewSnoteOperationCompleted(object arg) {
            if ((this.getNewSnoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewSnoteCompleted(this, new getNewSnoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSnotes", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Snote[] getSnotes(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSnotes", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Snote[])(results[0]));
        }
        
        /// <remarks/>
        public void getSnotesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSnotesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSnotesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSnotesOperationCompleted == null)) {
                this.getSnotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSnotesOperationCompleted);
            }
            this.InvokeAsync("getSnotes", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSnotesOperationCompleted, userState);
        }
        
        private void OngetSnotesOperationCompleted(object arg) {
            if ((this.getSnotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSnotesCompleted(this, new getSnotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSnotesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSnotesAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSnotesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSnotesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSnotesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSnotesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSnotesAsDataSetOperationCompleted == null)) {
                this.getSnotesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSnotesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSnotesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSnotesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSnotesAsDataSetOperationCompleted(object arg) {
            if ((this.getSnotesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSnotesAsDataSetCompleted(this, new getSnotesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getLOVByTypeAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getLOVByTypeAsDataSet(string lovTypeID) {
            object[] results = this.Invoke("getLOVByTypeAsDataSet", new object[] {
                        lovTypeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getLOVByTypeAsDataSetAsync(string lovTypeID) {
            this.getLOVByTypeAsDataSetAsync(lovTypeID, null);
        }
        
        /// <remarks/>
        public void getLOVByTypeAsDataSetAsync(string lovTypeID, object userState) {
            if ((this.getLOVByTypeAsDataSetOperationCompleted == null)) {
                this.getLOVByTypeAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLOVByTypeAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getLOVByTypeAsDataSet", new object[] {
                        lovTypeID}, this.getLOVByTypeAsDataSetOperationCompleted, userState);
        }
        
        private void OngetLOVByTypeAsDataSetOperationCompleted(object arg) {
            if ((this.getLOVByTypeAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLOVByTypeAsDataSetCompleted(this, new getLOVByTypeAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNextCounter", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getNextCounter(string counterName) {
            object[] results = this.Invoke("getNextCounter", new object[] {
                        counterName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getNextCounterAsync(string counterName) {
            this.getNextCounterAsync(counterName, null);
        }
        
        /// <remarks/>
        public void getNextCounterAsync(string counterName, object userState) {
            if ((this.getNextCounterOperationCompleted == null)) {
                this.getNextCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextCounterOperationCompleted);
            }
            this.InvokeAsync("getNextCounter", new object[] {
                        counterName}, this.getNextCounterOperationCompleted, userState);
        }
        
        private void OngetNextCounterOperationCompleted(object arg) {
            if ((this.getNextCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextCounterCompleted(this, new getNextCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/customSQLCall", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet customSQLCall(string sqlCall, nameValuePairs[] inParms, string checkSum) {
            object[] results = this.Invoke("customSQLCall", new object[] {
                        sqlCall,
                        inParms,
                        checkSum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void customSQLCallAsync(string sqlCall, nameValuePairs[] inParms, string checkSum) {
            this.customSQLCallAsync(sqlCall, inParms, checkSum, null);
        }
        
        /// <remarks/>
        public void customSQLCallAsync(string sqlCall, nameValuePairs[] inParms, string checkSum, object userState) {
            if ((this.customSQLCallOperationCompleted == null)) {
                this.customSQLCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomSQLCallOperationCompleted);
            }
            this.InvokeAsync("customSQLCall", new object[] {
                        sqlCall,
                        inParms,
                        checkSum}, this.customSQLCallOperationCompleted, userState);
        }
        
        private void OncustomSQLCallOperationCompleted(object arg) {
            if ((this.customSQLCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customSQLCallCompleted(this, new customSQLCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/customSQLCallAsXmlDocumen" +
            "t", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode customSQLCallAsXmlDocument(string sqlCall, nameValuePairs[] inParms, string checkSum) {
            object[] results = this.Invoke("customSQLCallAsXmlDocument", new object[] {
                        sqlCall,
                        inParms,
                        checkSum});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void customSQLCallAsXmlDocumentAsync(string sqlCall, nameValuePairs[] inParms, string checkSum) {
            this.customSQLCallAsXmlDocumentAsync(sqlCall, inParms, checkSum, null);
        }
        
        /// <remarks/>
        public void customSQLCallAsXmlDocumentAsync(string sqlCall, nameValuePairs[] inParms, string checkSum, object userState) {
            if ((this.customSQLCallAsXmlDocumentOperationCompleted == null)) {
                this.customSQLCallAsXmlDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomSQLCallAsXmlDocumentOperationCompleted);
            }
            this.InvokeAsync("customSQLCallAsXmlDocument", new object[] {
                        sqlCall,
                        inParms,
                        checkSum}, this.customSQLCallAsXmlDocumentOperationCompleted, userState);
        }
        
        private void OncustomSQLCallAsXmlDocumentOperationCompleted(object arg) {
            if ((this.customSQLCallAsXmlDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customSQLCallAsXmlDocumentCompleted(this, new customSQLCallAsXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/customSQLCallAlternateCon" +
            "nection", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet customSQLCallAlternateConnection(string connectionID, string sqlCall, nameValuePairs[] inParms, string checkSum) {
            object[] results = this.Invoke("customSQLCallAlternateConnection", new object[] {
                        connectionID,
                        sqlCall,
                        inParms,
                        checkSum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void customSQLCallAlternateConnectionAsync(string connectionID, string sqlCall, nameValuePairs[] inParms, string checkSum) {
            this.customSQLCallAlternateConnectionAsync(connectionID, sqlCall, inParms, checkSum, null);
        }
        
        /// <remarks/>
        public void customSQLCallAlternateConnectionAsync(string connectionID, string sqlCall, nameValuePairs[] inParms, string checkSum, object userState) {
            if ((this.customSQLCallAlternateConnectionOperationCompleted == null)) {
                this.customSQLCallAlternateConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomSQLCallAlternateConnectionOperationCompleted);
            }
            this.InvokeAsync("customSQLCallAlternateConnection", new object[] {
                        connectionID,
                        sqlCall,
                        inParms,
                        checkSum}, this.customSQLCallAlternateConnectionOperationCompleted, userState);
        }
        
        private void OncustomSQLCallAlternateConnectionOperationCompleted(object arg) {
            if ((this.customSQLCallAlternateConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customSQLCallAlternateConnectionCompleted(this, new customSQLCallAlternateConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/customSQLCallAlternateCon" +
            "nectionAsXmlDocument", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode customSQLCallAlternateConnectionAsXmlDocument(string connectionID, string sqlCall, nameValuePairs[] inParms, string checkSum) {
            object[] results = this.Invoke("customSQLCallAlternateConnectionAsXmlDocument", new object[] {
                        connectionID,
                        sqlCall,
                        inParms,
                        checkSum});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void customSQLCallAlternateConnectionAsXmlDocumentAsync(string connectionID, string sqlCall, nameValuePairs[] inParms, string checkSum) {
            this.customSQLCallAlternateConnectionAsXmlDocumentAsync(connectionID, sqlCall, inParms, checkSum, null);
        }
        
        /// <remarks/>
        public void customSQLCallAlternateConnectionAsXmlDocumentAsync(string connectionID, string sqlCall, nameValuePairs[] inParms, string checkSum, object userState) {
            if ((this.customSQLCallAlternateConnectionAsXmlDocumentOperationCompleted == null)) {
                this.customSQLCallAlternateConnectionAsXmlDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncustomSQLCallAlternateConnectionAsXmlDocumentOperationCompleted);
            }
            this.InvokeAsync("customSQLCallAlternateConnectionAsXmlDocument", new object[] {
                        connectionID,
                        sqlCall,
                        inParms,
                        checkSum}, this.customSQLCallAlternateConnectionAsXmlDocumentOperationCompleted, userState);
        }
        
        private void OncustomSQLCallAlternateConnectionAsXmlDocumentOperationCompleted(object arg) {
            if ((this.customSQLCallAlternateConnectionAsXmlDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.customSQLCallAlternateConnectionAsXmlDocumentCompleted(this, new customSQLCallAlternateConnectionAsXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSalesperson", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Salesperson editSalesperson(string actionType, Salesperson inSalesperson) {
            object[] results = this.Invoke("editSalesperson", new object[] {
                        actionType,
                        inSalesperson});
            return ((Salesperson)(results[0]));
        }
        
        /// <remarks/>
        public void editSalespersonAsync(string actionType, Salesperson inSalesperson) {
            this.editSalespersonAsync(actionType, inSalesperson, null);
        }
        
        /// <remarks/>
        public void editSalespersonAsync(string actionType, Salesperson inSalesperson, object userState) {
            if ((this.editSalespersonOperationCompleted == null)) {
                this.editSalespersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSalespersonOperationCompleted);
            }
            this.InvokeAsync("editSalesperson", new object[] {
                        actionType,
                        inSalesperson}, this.editSalespersonOperationCompleted, userState);
        }
        
        private void OneditSalespersonOperationCompleted(object arg) {
            if ((this.editSalespersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSalespersonCompleted(this, new editSalespersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSalespersonAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editSalespersonAsDataSet(string actionType, Salesperson inSalesperson) {
            object[] results = this.Invoke("editSalespersonAsDataSet", new object[] {
                        actionType,
                        inSalesperson});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editSalespersonAsDataSetAsync(string actionType, Salesperson inSalesperson) {
            this.editSalespersonAsDataSetAsync(actionType, inSalesperson, null);
        }
        
        /// <remarks/>
        public void editSalespersonAsDataSetAsync(string actionType, Salesperson inSalesperson, object userState) {
            if ((this.editSalespersonAsDataSetOperationCompleted == null)) {
                this.editSalespersonAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSalespersonAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editSalespersonAsDataSet", new object[] {
                        actionType,
                        inSalesperson}, this.editSalespersonAsDataSetOperationCompleted, userState);
        }
        
        private void OneditSalespersonAsDataSetOperationCompleted(object arg) {
            if ((this.editSalespersonAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSalespersonAsDataSetCompleted(this, new editSalespersonAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewSalesperson", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Salesperson getNewSalesperson() {
            object[] results = this.Invoke("getNewSalesperson", new object[0]);
            return ((Salesperson)(results[0]));
        }
        
        /// <remarks/>
        public void getNewSalespersonAsync() {
            this.getNewSalespersonAsync(null);
        }
        
        /// <remarks/>
        public void getNewSalespersonAsync(object userState) {
            if ((this.getNewSalespersonOperationCompleted == null)) {
                this.getNewSalespersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewSalespersonOperationCompleted);
            }
            this.InvokeAsync("getNewSalesperson", new object[0], this.getNewSalespersonOperationCompleted, userState);
        }
        
        private void OngetNewSalespersonOperationCompleted(object arg) {
            if ((this.getNewSalespersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewSalespersonCompleted(this, new getNewSalespersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSalespersons", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Salesperson[] getSalespersons(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSalespersons", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Salesperson[])(results[0]));
        }
        
        /// <remarks/>
        public void getSalespersonsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSalespersonsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSalespersonsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSalespersonsOperationCompleted == null)) {
                this.getSalespersonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSalespersonsOperationCompleted);
            }
            this.InvokeAsync("getSalespersons", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSalespersonsOperationCompleted, userState);
        }
        
        private void OngetSalespersonsOperationCompleted(object arg) {
            if ((this.getSalespersonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSalespersonsCompleted(this, new getSalespersonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSalespersonsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSalespersonsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSalespersonsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSalespersonsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSalespersonsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSalespersonsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSalespersonsAsDataSetOperationCompleted == null)) {
                this.getSalespersonsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSalespersonsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSalespersonsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSalespersonsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSalespersonsAsDataSetOperationCompleted(object arg) {
            if ((this.getSalespersonsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSalespersonsAsDataSetCompleted(this, new getSalespersonsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSalesTaxes", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTax[] getSalesTaxes(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSalesTaxes", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((SalesTax[])(results[0]));
        }
        
        /// <remarks/>
        public void getSalesTaxesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSalesTaxesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSalesTaxesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSalesTaxesOperationCompleted == null)) {
                this.getSalesTaxesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSalesTaxesOperationCompleted);
            }
            this.InvokeAsync("getSalesTaxes", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSalesTaxesOperationCompleted, userState);
        }
        
        private void OngetSalesTaxesOperationCompleted(object arg) {
            if ((this.getSalesTaxesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSalesTaxesCompleted(this, new getSalesTaxesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSalesTaxesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSalesTaxesAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSalesTaxesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSalesTaxesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSalesTaxesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSalesTaxesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSalesTaxesAsDataSetOperationCompleted == null)) {
                this.getSalesTaxesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSalesTaxesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSalesTaxesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSalesTaxesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSalesTaxesAsDataSetOperationCompleted(object arg) {
            if ((this.getSalesTaxesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSalesTaxesAsDataSetCompleted(this, new getSalesTaxesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editState", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public State editState(string actionType, State inState) {
            object[] results = this.Invoke("editState", new object[] {
                        actionType,
                        inState});
            return ((State)(results[0]));
        }
        
        /// <remarks/>
        public void editStateAsync(string actionType, State inState) {
            this.editStateAsync(actionType, inState, null);
        }
        
        /// <remarks/>
        public void editStateAsync(string actionType, State inState, object userState) {
            if ((this.editStateOperationCompleted == null)) {
                this.editStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditStateOperationCompleted);
            }
            this.InvokeAsync("editState", new object[] {
                        actionType,
                        inState}, this.editStateOperationCompleted, userState);
        }
        
        private void OneditStateOperationCompleted(object arg) {
            if ((this.editStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editStateCompleted(this, new editStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editStateAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editStateAsDataSet(string actionType, State inState) {
            object[] results = this.Invoke("editStateAsDataSet", new object[] {
                        actionType,
                        inState});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editStateAsDataSetAsync(string actionType, State inState) {
            this.editStateAsDataSetAsync(actionType, inState, null);
        }
        
        /// <remarks/>
        public void editStateAsDataSetAsync(string actionType, State inState, object userState) {
            if ((this.editStateAsDataSetOperationCompleted == null)) {
                this.editStateAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditStateAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editStateAsDataSet", new object[] {
                        actionType,
                        inState}, this.editStateAsDataSetOperationCompleted, userState);
        }
        
        private void OneditStateAsDataSetOperationCompleted(object arg) {
            if ((this.editStateAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editStateAsDataSetCompleted(this, new editStateAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewState", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public State getNewState() {
            object[] results = this.Invoke("getNewState", new object[0]);
            return ((State)(results[0]));
        }
        
        /// <remarks/>
        public void getNewStateAsync() {
            this.getNewStateAsync(null);
        }
        
        /// <remarks/>
        public void getNewStateAsync(object userState) {
            if ((this.getNewStateOperationCompleted == null)) {
                this.getNewStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewStateOperationCompleted);
            }
            this.InvokeAsync("getNewState", new object[0], this.getNewStateOperationCompleted, userState);
        }
        
        private void OngetNewStateOperationCompleted(object arg) {
            if ((this.getNewStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewStateCompleted(this, new getNewStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getStates", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public State[] getStates(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getStates", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((State[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getStatesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getStatesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getStatesOperationCompleted == null)) {
                this.getStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatesOperationCompleted);
            }
            this.InvokeAsync("getStates", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getStatesOperationCompleted, userState);
        }
        
        private void OngetStatesOperationCompleted(object arg) {
            if ((this.getStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatesCompleted(this, new getStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getStatesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getStatesAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getStatesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getStatesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getStatesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getStatesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getStatesAsDataSetOperationCompleted == null)) {
                this.getStatesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getStatesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getStatesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetStatesAsDataSetOperationCompleted(object arg) {
            if ((this.getStatesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatesAsDataSetCompleted(this, new getStatesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editCountry", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country editCountry(string actionType, Country inCountry) {
            object[] results = this.Invoke("editCountry", new object[] {
                        actionType,
                        inCountry});
            return ((Country)(results[0]));
        }
        
        /// <remarks/>
        public void editCountryAsync(string actionType, Country inCountry) {
            this.editCountryAsync(actionType, inCountry, null);
        }
        
        /// <remarks/>
        public void editCountryAsync(string actionType, Country inCountry, object userState) {
            if ((this.editCountryOperationCompleted == null)) {
                this.editCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditCountryOperationCompleted);
            }
            this.InvokeAsync("editCountry", new object[] {
                        actionType,
                        inCountry}, this.editCountryOperationCompleted, userState);
        }
        
        private void OneditCountryOperationCompleted(object arg) {
            if ((this.editCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editCountryCompleted(this, new editCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editCountryAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editCountryAsDataSet(string actionType, Country inCountry) {
            object[] results = this.Invoke("editCountryAsDataSet", new object[] {
                        actionType,
                        inCountry});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editCountryAsDataSetAsync(string actionType, Country inCountry) {
            this.editCountryAsDataSetAsync(actionType, inCountry, null);
        }
        
        /// <remarks/>
        public void editCountryAsDataSetAsync(string actionType, Country inCountry, object userState) {
            if ((this.editCountryAsDataSetOperationCompleted == null)) {
                this.editCountryAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditCountryAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editCountryAsDataSet", new object[] {
                        actionType,
                        inCountry}, this.editCountryAsDataSetOperationCompleted, userState);
        }
        
        private void OneditCountryAsDataSetOperationCompleted(object arg) {
            if ((this.editCountryAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editCountryAsDataSetCompleted(this, new editCountryAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewCountry", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country getNewCountry() {
            object[] results = this.Invoke("getNewCountry", new object[0]);
            return ((Country)(results[0]));
        }
        
        /// <remarks/>
        public void getNewCountryAsync() {
            this.getNewCountryAsync(null);
        }
        
        /// <remarks/>
        public void getNewCountryAsync(object userState) {
            if ((this.getNewCountryOperationCompleted == null)) {
                this.getNewCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewCountryOperationCompleted);
            }
            this.InvokeAsync("getNewCountry", new object[0], this.getNewCountryOperationCompleted, userState);
        }
        
        private void OngetNewCountryOperationCompleted(object arg) {
            if ((this.getNewCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewCountryCompleted(this, new getNewCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getCountries", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country[] getCountries(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getCountries", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Country[])(results[0]));
        }
        
        /// <remarks/>
        public void getCountriesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getCountriesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getCountriesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getCountriesOperationCompleted == null)) {
                this.getCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountriesOperationCompleted);
            }
            this.InvokeAsync("getCountries", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getCountriesOperationCompleted, userState);
        }
        
        private void OngetCountriesOperationCompleted(object arg) {
            if ((this.getCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountriesCompleted(this, new getCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getCountriesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getCountriesAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getCountriesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getCountriesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getCountriesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getCountriesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getCountriesAsDataSetOperationCompleted == null)) {
                this.getCountriesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountriesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getCountriesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getCountriesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetCountriesAsDataSetOperationCompleted(object arg) {
            if ((this.getCountriesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountriesAsDataSetCompleted(this, new getCountriesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSegDef", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SegDef editSegDef(string actionType, SegDef inSegDef) {
            object[] results = this.Invoke("editSegDef", new object[] {
                        actionType,
                        inSegDef});
            return ((SegDef)(results[0]));
        }
        
        /// <remarks/>
        public void editSegDefAsync(string actionType, SegDef inSegDef) {
            this.editSegDefAsync(actionType, inSegDef, null);
        }
        
        /// <remarks/>
        public void editSegDefAsync(string actionType, SegDef inSegDef, object userState) {
            if ((this.editSegDefOperationCompleted == null)) {
                this.editSegDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSegDefOperationCompleted);
            }
            this.InvokeAsync("editSegDef", new object[] {
                        actionType,
                        inSegDef}, this.editSegDefOperationCompleted, userState);
        }
        
        private void OneditSegDefOperationCompleted(object arg) {
            if ((this.editSegDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSegDefCompleted(this, new editSegDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSegDefAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editSegDefAsDataSet(string actionType, SegDef inSegDef) {
            object[] results = this.Invoke("editSegDefAsDataSet", new object[] {
                        actionType,
                        inSegDef});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editSegDefAsDataSetAsync(string actionType, SegDef inSegDef) {
            this.editSegDefAsDataSetAsync(actionType, inSegDef, null);
        }
        
        /// <remarks/>
        public void editSegDefAsDataSetAsync(string actionType, SegDef inSegDef, object userState) {
            if ((this.editSegDefAsDataSetOperationCompleted == null)) {
                this.editSegDefAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSegDefAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editSegDefAsDataSet", new object[] {
                        actionType,
                        inSegDef}, this.editSegDefAsDataSetOperationCompleted, userState);
        }
        
        private void OneditSegDefAsDataSetOperationCompleted(object arg) {
            if ((this.editSegDefAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSegDefAsDataSetCompleted(this, new editSegDefAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewSegDef", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SegDef getNewSegDef() {
            object[] results = this.Invoke("getNewSegDef", new object[0]);
            return ((SegDef)(results[0]));
        }
        
        /// <remarks/>
        public void getNewSegDefAsync() {
            this.getNewSegDefAsync(null);
        }
        
        /// <remarks/>
        public void getNewSegDefAsync(object userState) {
            if ((this.getNewSegDefOperationCompleted == null)) {
                this.getNewSegDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewSegDefOperationCompleted);
            }
            this.InvokeAsync("getNewSegDef", new object[0], this.getNewSegDefOperationCompleted, userState);
        }
        
        private void OngetNewSegDefOperationCompleted(object arg) {
            if ((this.getNewSegDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewSegDefCompleted(this, new getNewSegDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSegDefs", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SegDef[] getSegDefs(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSegDefs", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((SegDef[])(results[0]));
        }
        
        /// <remarks/>
        public void getSegDefsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSegDefsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSegDefsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSegDefsOperationCompleted == null)) {
                this.getSegDefsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSegDefsOperationCompleted);
            }
            this.InvokeAsync("getSegDefs", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSegDefsOperationCompleted, userState);
        }
        
        private void OngetSegDefsOperationCompleted(object arg) {
            if ((this.getSegDefsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSegDefsCompleted(this, new getSegDefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSegDefsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSegDefsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSegDefsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSegDefsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSegDefsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSegDefsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSegDefsAsDataSetOperationCompleted == null)) {
                this.getSegDefsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSegDefsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSegDefsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSegDefsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSegDefsAsDataSetOperationCompleted(object arg) {
            if ((this.getSegDefsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSegDefsAsDataSetCompleted(this, new getSegDefsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editAccount", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account editAccount(string actionType, Account inAccount) {
            object[] results = this.Invoke("editAccount", new object[] {
                        actionType,
                        inAccount});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void editAccountAsync(string actionType, Account inAccount) {
            this.editAccountAsync(actionType, inAccount, null);
        }
        
        /// <remarks/>
        public void editAccountAsync(string actionType, Account inAccount, object userState) {
            if ((this.editAccountOperationCompleted == null)) {
                this.editAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditAccountOperationCompleted);
            }
            this.InvokeAsync("editAccount", new object[] {
                        actionType,
                        inAccount}, this.editAccountOperationCompleted, userState);
        }
        
        private void OneditAccountOperationCompleted(object arg) {
            if ((this.editAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editAccountCompleted(this, new editAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editAccountAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editAccountAsDataSet(string actionType, Account inAccount) {
            object[] results = this.Invoke("editAccountAsDataSet", new object[] {
                        actionType,
                        inAccount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editAccountAsDataSetAsync(string actionType, Account inAccount) {
            this.editAccountAsDataSetAsync(actionType, inAccount, null);
        }
        
        /// <remarks/>
        public void editAccountAsDataSetAsync(string actionType, Account inAccount, object userState) {
            if ((this.editAccountAsDataSetOperationCompleted == null)) {
                this.editAccountAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditAccountAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editAccountAsDataSet", new object[] {
                        actionType,
                        inAccount}, this.editAccountAsDataSetOperationCompleted, userState);
        }
        
        private void OneditAccountAsDataSetOperationCompleted(object arg) {
            if ((this.editAccountAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editAccountAsDataSetCompleted(this, new editAccountAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewAccount", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account getNewAccount() {
            object[] results = this.Invoke("getNewAccount", new object[0]);
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void getNewAccountAsync() {
            this.getNewAccountAsync(null);
        }
        
        /// <remarks/>
        public void getNewAccountAsync(object userState) {
            if ((this.getNewAccountOperationCompleted == null)) {
                this.getNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewAccountOperationCompleted);
            }
            this.InvokeAsync("getNewAccount", new object[0], this.getNewAccountOperationCompleted, userState);
        }
        
        private void OngetNewAccountOperationCompleted(object arg) {
            if ((this.getNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewAccountCompleted(this, new getNewAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getAccounts", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account[] getAccounts(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getAccounts", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Account[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccountsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getAccountsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getAccountsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getAccountsOperationCompleted == null)) {
                this.getAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountsOperationCompleted);
            }
            this.InvokeAsync("getAccounts", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getAccountsOperationCompleted, userState);
        }
        
        private void OngetAccountsOperationCompleted(object arg) {
            if ((this.getAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountsCompleted(this, new getAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getAccountsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAccountsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getAccountsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getAccountsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getAccountsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getAccountsAsDataSetOperationCompleted == null)) {
                this.getAccountsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getAccountsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getAccountsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetAccountsAsDataSetOperationCompleted(object arg) {
            if ((this.getAccountsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountsAsDataSetCompleted(this, new getAccountsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSubAcct", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubAcct editSubAcct(string actionType, SubAcct inSubAcct) {
            object[] results = this.Invoke("editSubAcct", new object[] {
                        actionType,
                        inSubAcct});
            return ((SubAcct)(results[0]));
        }
        
        /// <remarks/>
        public void editSubAcctAsync(string actionType, SubAcct inSubAcct) {
            this.editSubAcctAsync(actionType, inSubAcct, null);
        }
        
        /// <remarks/>
        public void editSubAcctAsync(string actionType, SubAcct inSubAcct, object userState) {
            if ((this.editSubAcctOperationCompleted == null)) {
                this.editSubAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSubAcctOperationCompleted);
            }
            this.InvokeAsync("editSubAcct", new object[] {
                        actionType,
                        inSubAcct}, this.editSubAcctOperationCompleted, userState);
        }
        
        private void OneditSubAcctOperationCompleted(object arg) {
            if ((this.editSubAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSubAcctCompleted(this, new editSubAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSubAcctAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editSubAcctAsDataSet(string actionType, SubAcct inSubAcct) {
            object[] results = this.Invoke("editSubAcctAsDataSet", new object[] {
                        actionType,
                        inSubAcct});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editSubAcctAsDataSetAsync(string actionType, SubAcct inSubAcct) {
            this.editSubAcctAsDataSetAsync(actionType, inSubAcct, null);
        }
        
        /// <remarks/>
        public void editSubAcctAsDataSetAsync(string actionType, SubAcct inSubAcct, object userState) {
            if ((this.editSubAcctAsDataSetOperationCompleted == null)) {
                this.editSubAcctAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSubAcctAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editSubAcctAsDataSet", new object[] {
                        actionType,
                        inSubAcct}, this.editSubAcctAsDataSetOperationCompleted, userState);
        }
        
        private void OneditSubAcctAsDataSetOperationCompleted(object arg) {
            if ((this.editSubAcctAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSubAcctAsDataSetCompleted(this, new editSubAcctAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewSubAcct", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubAcct getNewSubAcct() {
            object[] results = this.Invoke("getNewSubAcct", new object[0]);
            return ((SubAcct)(results[0]));
        }
        
        /// <remarks/>
        public void getNewSubAcctAsync() {
            this.getNewSubAcctAsync(null);
        }
        
        /// <remarks/>
        public void getNewSubAcctAsync(object userState) {
            if ((this.getNewSubAcctOperationCompleted == null)) {
                this.getNewSubAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewSubAcctOperationCompleted);
            }
            this.InvokeAsync("getNewSubAcct", new object[0], this.getNewSubAcctOperationCompleted, userState);
        }
        
        private void OngetNewSubAcctOperationCompleted(object arg) {
            if ((this.getNewSubAcctCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewSubAcctCompleted(this, new getNewSubAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSubAccts", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubAcct[] getSubAccts(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSubAccts", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((SubAcct[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubAcctsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSubAcctsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSubAcctsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSubAcctsOperationCompleted == null)) {
                this.getSubAcctsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubAcctsOperationCompleted);
            }
            this.InvokeAsync("getSubAccts", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSubAcctsOperationCompleted, userState);
        }
        
        private void OngetSubAcctsOperationCompleted(object arg) {
            if ((this.getSubAcctsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubAcctsCompleted(this, new getSubAcctsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSubAcctsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSubAcctsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSubAcctsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSubAcctsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSubAcctsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSubAcctsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSubAcctsAsDataSetOperationCompleted == null)) {
                this.getSubAcctsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubAcctsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSubAcctsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSubAcctsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSubAcctsAsDataSetOperationCompleted(object arg) {
            if ((this.getSubAcctsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubAcctsAsDataSetCompleted(this, new getSubAcctsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editBatch", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Batch editBatch(string actionType, Batch inItem) {
            object[] results = this.Invoke("editBatch", new object[] {
                        actionType,
                        inItem});
            return ((Batch)(results[0]));
        }
        
        /// <remarks/>
        public void editBatchAsync(string actionType, Batch inItem) {
            this.editBatchAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editBatchAsync(string actionType, Batch inItem, object userState) {
            if ((this.editBatchOperationCompleted == null)) {
                this.editBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditBatchOperationCompleted);
            }
            this.InvokeAsync("editBatch", new object[] {
                        actionType,
                        inItem}, this.editBatchOperationCompleted, userState);
        }
        
        private void OneditBatchOperationCompleted(object arg) {
            if ((this.editBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editBatchCompleted(this, new editBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editBatchAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editBatchAsDataSet(string actionType, Batch inItem) {
            object[] results = this.Invoke("editBatchAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editBatchAsDataSetAsync(string actionType, Batch inItem) {
            this.editBatchAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editBatchAsDataSetAsync(string actionType, Batch inItem, object userState) {
            if ((this.editBatchAsDataSetOperationCompleted == null)) {
                this.editBatchAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditBatchAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editBatchAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editBatchAsDataSetOperationCompleted, userState);
        }
        
        private void OneditBatchAsDataSetOperationCompleted(object arg) {
            if ((this.editBatchAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editBatchAsDataSetCompleted(this, new editBatchAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewBatch", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Batch getNewBatch(Batch inTemplate) {
            object[] results = this.Invoke("getNewBatch", new object[] {
                        inTemplate});
            return ((Batch)(results[0]));
        }
        
        /// <remarks/>
        public void getNewBatchAsync(Batch inTemplate) {
            this.getNewBatchAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewBatchAsync(Batch inTemplate, object userState) {
            if ((this.getNewBatchOperationCompleted == null)) {
                this.getNewBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewBatchOperationCompleted);
            }
            this.InvokeAsync("getNewBatch", new object[] {
                        inTemplate}, this.getNewBatchOperationCompleted, userState);
        }
        
        private void OngetNewBatchOperationCompleted(object arg) {
            if ((this.getNewBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewBatchCompleted(this, new getNewBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getBatches", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Batch[] getBatches(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getBatches", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Batch[])(results[0]));
        }
        
        /// <remarks/>
        public void getBatchesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getBatchesAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getBatchesAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getBatchesOperationCompleted == null)) {
                this.getBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchesOperationCompleted);
            }
            this.InvokeAsync("getBatches", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getBatchesOperationCompleted, userState);
        }
        
        private void OngetBatchesOperationCompleted(object arg) {
            if ((this.getBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchesCompleted(this, new getBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getBatchesAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getBatchesAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getBatchesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getBatchesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getBatchesAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getBatchesAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getBatchesAsDataSetOperationCompleted == null)) {
                this.getBatchesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getBatchesAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getBatchesAsDataSetOperationCompleted, userState);
        }
        
        private void OngetBatchesAsDataSetOperationCompleted(object arg) {
            if ((this.getBatchesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchesAsDataSetCompleted(this, new getBatchesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editTerms", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Terms editTerms(string actionType, Terms inItem) {
            object[] results = this.Invoke("editTerms", new object[] {
                        actionType,
                        inItem});
            return ((Terms)(results[0]));
        }
        
        /// <remarks/>
        public void editTermsAsync(string actionType, Terms inItem) {
            this.editTermsAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editTermsAsync(string actionType, Terms inItem, object userState) {
            if ((this.editTermsOperationCompleted == null)) {
                this.editTermsOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTermsOperationCompleted);
            }
            this.InvokeAsync("editTerms", new object[] {
                        actionType,
                        inItem}, this.editTermsOperationCompleted, userState);
        }
        
        private void OneditTermsOperationCompleted(object arg) {
            if ((this.editTermsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTermsCompleted(this, new editTermsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editTermsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editTermsAsDataSet(string actionType, Terms inItem) {
            object[] results = this.Invoke("editTermsAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editTermsAsDataSetAsync(string actionType, Terms inItem) {
            this.editTermsAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editTermsAsDataSetAsync(string actionType, Terms inItem, object userState) {
            if ((this.editTermsAsDataSetOperationCompleted == null)) {
                this.editTermsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTermsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editTermsAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editTermsAsDataSetOperationCompleted, userState);
        }
        
        private void OneditTermsAsDataSetOperationCompleted(object arg) {
            if ((this.editTermsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTermsAsDataSetCompleted(this, new editTermsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewTerms", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Terms getNewTerms(Terms inTemplate) {
            object[] results = this.Invoke("getNewTerms", new object[] {
                        inTemplate});
            return ((Terms)(results[0]));
        }
        
        /// <remarks/>
        public void getNewTermsAsync(Terms inTemplate) {
            this.getNewTermsAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewTermsAsync(Terms inTemplate, object userState) {
            if ((this.getNewTermsOperationCompleted == null)) {
                this.getNewTermsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewTermsOperationCompleted);
            }
            this.InvokeAsync("getNewTerms", new object[] {
                        inTemplate}, this.getNewTermsOperationCompleted, userState);
        }
        
        private void OngetNewTermsOperationCompleted(object arg) {
            if ((this.getNewTermsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewTermsCompleted(this, new getNewTermsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getTerms", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Terms[] getTerms(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getTerms", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((Terms[])(results[0]));
        }
        
        /// <remarks/>
        public void getTermsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getTermsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getTermsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getTermsOperationCompleted == null)) {
                this.getTermsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTermsOperationCompleted);
            }
            this.InvokeAsync("getTerms", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getTermsOperationCompleted, userState);
        }
        
        private void OngetTermsOperationCompleted(object arg) {
            if ((this.getTermsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTermsCompleted(this, new getTermsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getTermsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getTermsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getTermsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getTermsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getTermsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getTermsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getTermsAsDataSetOperationCompleted == null)) {
                this.getTermsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTermsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getTermsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getTermsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetTermsAsDataSetOperationCompleted(object arg) {
            if ((this.getTermsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTermsAsDataSetCompleted(this, new getTermsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSlsTaxCat", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SlsTaxCat editSlsTaxCat(string actionType, SlsTaxCat inItem) {
            object[] results = this.Invoke("editSlsTaxCat", new object[] {
                        actionType,
                        inItem});
            return ((SlsTaxCat)(results[0]));
        }
        
        /// <remarks/>
        public void editSlsTaxCatAsync(string actionType, SlsTaxCat inItem) {
            this.editSlsTaxCatAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editSlsTaxCatAsync(string actionType, SlsTaxCat inItem, object userState) {
            if ((this.editSlsTaxCatOperationCompleted == null)) {
                this.editSlsTaxCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSlsTaxCatOperationCompleted);
            }
            this.InvokeAsync("editSlsTaxCat", new object[] {
                        actionType,
                        inItem}, this.editSlsTaxCatOperationCompleted, userState);
        }
        
        private void OneditSlsTaxCatOperationCompleted(object arg) {
            if ((this.editSlsTaxCatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSlsTaxCatCompleted(this, new editSlsTaxCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSlsTaxCatAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editSlsTaxCatAsDataSet(string actionType, SlsTaxCat inItem) {
            object[] results = this.Invoke("editSlsTaxCatAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editSlsTaxCatAsDataSetAsync(string actionType, SlsTaxCat inItem) {
            this.editSlsTaxCatAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editSlsTaxCatAsDataSetAsync(string actionType, SlsTaxCat inItem, object userState) {
            if ((this.editSlsTaxCatAsDataSetOperationCompleted == null)) {
                this.editSlsTaxCatAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSlsTaxCatAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editSlsTaxCatAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editSlsTaxCatAsDataSetOperationCompleted, userState);
        }
        
        private void OneditSlsTaxCatAsDataSetOperationCompleted(object arg) {
            if ((this.editSlsTaxCatAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSlsTaxCatAsDataSetCompleted(this, new editSlsTaxCatAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewSlsTaxCat", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SlsTaxCat getNewSlsTaxCat(SlsTaxCat inTemplate) {
            object[] results = this.Invoke("getNewSlsTaxCat", new object[] {
                        inTemplate});
            return ((SlsTaxCat)(results[0]));
        }
        
        /// <remarks/>
        public void getNewSlsTaxCatAsync(SlsTaxCat inTemplate) {
            this.getNewSlsTaxCatAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewSlsTaxCatAsync(SlsTaxCat inTemplate, object userState) {
            if ((this.getNewSlsTaxCatOperationCompleted == null)) {
                this.getNewSlsTaxCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewSlsTaxCatOperationCompleted);
            }
            this.InvokeAsync("getNewSlsTaxCat", new object[] {
                        inTemplate}, this.getNewSlsTaxCatOperationCompleted, userState);
        }
        
        private void OngetNewSlsTaxCatOperationCompleted(object arg) {
            if ((this.getNewSlsTaxCatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewSlsTaxCatCompleted(this, new getNewSlsTaxCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSlsTaxCats", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SlsTaxCat[] getSlsTaxCats(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSlsTaxCats", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((SlsTaxCat[])(results[0]));
        }
        
        /// <remarks/>
        public void getSlsTaxCatsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSlsTaxCatsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSlsTaxCatsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSlsTaxCatsOperationCompleted == null)) {
                this.getSlsTaxCatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSlsTaxCatsOperationCompleted);
            }
            this.InvokeAsync("getSlsTaxCats", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSlsTaxCatsOperationCompleted, userState);
        }
        
        private void OngetSlsTaxCatsOperationCompleted(object arg) {
            if ((this.getSlsTaxCatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSlsTaxCatsCompleted(this, new getSlsTaxCatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSlsTaxCatsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSlsTaxCatsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSlsTaxCatsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSlsTaxCatsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSlsTaxCatsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSlsTaxCatsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSlsTaxCatsAsDataSetOperationCompleted == null)) {
                this.getSlsTaxCatsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSlsTaxCatsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSlsTaxCatsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSlsTaxCatsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSlsTaxCatsAsDataSetOperationCompleted(object arg) {
            if ((this.getSlsTaxCatsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSlsTaxCatsAsDataSetCompleted(this, new getSlsTaxCatsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editAcctXref", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AcctXref editAcctXref(string actionType, AcctXref inItem) {
            object[] results = this.Invoke("editAcctXref", new object[] {
                        actionType,
                        inItem});
            return ((AcctXref)(results[0]));
        }
        
        /// <remarks/>
        public void editAcctXrefAsync(string actionType, AcctXref inItem) {
            this.editAcctXrefAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editAcctXrefAsync(string actionType, AcctXref inItem, object userState) {
            if ((this.editAcctXrefOperationCompleted == null)) {
                this.editAcctXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditAcctXrefOperationCompleted);
            }
            this.InvokeAsync("editAcctXref", new object[] {
                        actionType,
                        inItem}, this.editAcctXrefOperationCompleted, userState);
        }
        
        private void OneditAcctXrefOperationCompleted(object arg) {
            if ((this.editAcctXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editAcctXrefCompleted(this, new editAcctXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editAcctXrefAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editAcctXrefAsDataSet(string actionType, AcctXref inItem) {
            object[] results = this.Invoke("editAcctXrefAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editAcctXrefAsDataSetAsync(string actionType, AcctXref inItem) {
            this.editAcctXrefAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editAcctXrefAsDataSetAsync(string actionType, AcctXref inItem, object userState) {
            if ((this.editAcctXrefAsDataSetOperationCompleted == null)) {
                this.editAcctXrefAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditAcctXrefAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editAcctXrefAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editAcctXrefAsDataSetOperationCompleted, userState);
        }
        
        private void OneditAcctXrefAsDataSetOperationCompleted(object arg) {
            if ((this.editAcctXrefAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editAcctXrefAsDataSetCompleted(this, new editAcctXrefAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewAcctXref", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AcctXref getNewAcctXref(AcctXref inTemplate) {
            object[] results = this.Invoke("getNewAcctXref", new object[] {
                        inTemplate});
            return ((AcctXref)(results[0]));
        }
        
        /// <remarks/>
        public void getNewAcctXrefAsync(AcctXref inTemplate) {
            this.getNewAcctXrefAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewAcctXrefAsync(AcctXref inTemplate, object userState) {
            if ((this.getNewAcctXrefOperationCompleted == null)) {
                this.getNewAcctXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewAcctXrefOperationCompleted);
            }
            this.InvokeAsync("getNewAcctXref", new object[] {
                        inTemplate}, this.getNewAcctXrefOperationCompleted, userState);
        }
        
        private void OngetNewAcctXrefOperationCompleted(object arg) {
            if ((this.getNewAcctXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewAcctXrefCompleted(this, new getNewAcctXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getAcctXrefs", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AcctXref[] getAcctXrefs(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getAcctXrefs", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((AcctXref[])(results[0]));
        }
        
        /// <remarks/>
        public void getAcctXrefsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getAcctXrefsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getAcctXrefsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getAcctXrefsOperationCompleted == null)) {
                this.getAcctXrefsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAcctXrefsOperationCompleted);
            }
            this.InvokeAsync("getAcctXrefs", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getAcctXrefsOperationCompleted, userState);
        }
        
        private void OngetAcctXrefsOperationCompleted(object arg) {
            if ((this.getAcctXrefsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAcctXrefsCompleted(this, new getAcctXrefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getAcctXrefsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAcctXrefsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getAcctXrefsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAcctXrefsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getAcctXrefsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getAcctXrefsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getAcctXrefsAsDataSetOperationCompleted == null)) {
                this.getAcctXrefsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAcctXrefsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getAcctXrefsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getAcctXrefsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetAcctXrefsAsDataSetOperationCompleted(object arg) {
            if ((this.getAcctXrefsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAcctXrefsAsDataSetCompleted(this, new getAcctXrefsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSubXref", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubXref editSubXref(string actionType, SubXref inItem) {
            object[] results = this.Invoke("editSubXref", new object[] {
                        actionType,
                        inItem});
            return ((SubXref)(results[0]));
        }
        
        /// <remarks/>
        public void editSubXrefAsync(string actionType, SubXref inItem) {
            this.editSubXrefAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editSubXrefAsync(string actionType, SubXref inItem, object userState) {
            if ((this.editSubXrefOperationCompleted == null)) {
                this.editSubXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSubXrefOperationCompleted);
            }
            this.InvokeAsync("editSubXref", new object[] {
                        actionType,
                        inItem}, this.editSubXrefOperationCompleted, userState);
        }
        
        private void OneditSubXrefOperationCompleted(object arg) {
            if ((this.editSubXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSubXrefCompleted(this, new editSubXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editSubXrefAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editSubXrefAsDataSet(string actionType, SubXref inItem) {
            object[] results = this.Invoke("editSubXrefAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editSubXrefAsDataSetAsync(string actionType, SubXref inItem) {
            this.editSubXrefAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editSubXrefAsDataSetAsync(string actionType, SubXref inItem, object userState) {
            if ((this.editSubXrefAsDataSetOperationCompleted == null)) {
                this.editSubXrefAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditSubXrefAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editSubXrefAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editSubXrefAsDataSetOperationCompleted, userState);
        }
        
        private void OneditSubXrefAsDataSetOperationCompleted(object arg) {
            if ((this.editSubXrefAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editSubXrefAsDataSetCompleted(this, new editSubXrefAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewSubXref", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubXref getNewSubXref(SubXref inTemplate) {
            object[] results = this.Invoke("getNewSubXref", new object[] {
                        inTemplate});
            return ((SubXref)(results[0]));
        }
        
        /// <remarks/>
        public void getNewSubXrefAsync(SubXref inTemplate) {
            this.getNewSubXrefAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewSubXrefAsync(SubXref inTemplate, object userState) {
            if ((this.getNewSubXrefOperationCompleted == null)) {
                this.getNewSubXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewSubXrefOperationCompleted);
            }
            this.InvokeAsync("getNewSubXref", new object[] {
                        inTemplate}, this.getNewSubXrefOperationCompleted, userState);
        }
        
        private void OngetNewSubXrefOperationCompleted(object arg) {
            if ((this.getNewSubXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewSubXrefCompleted(this, new getNewSubXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSubXrefs", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubXref[] getSubXrefs(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSubXrefs", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((SubXref[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubXrefsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSubXrefsAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSubXrefsAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSubXrefsOperationCompleted == null)) {
                this.getSubXrefsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubXrefsOperationCompleted);
            }
            this.InvokeAsync("getSubXrefs", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSubXrefsOperationCompleted, userState);
        }
        
        private void OngetSubXrefsOperationCompleted(object arg) {
            if ((this.getSubXrefsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubXrefsCompleted(this, new getSubXrefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getSubXrefsAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSubXrefsAsDataSet(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            object[] results = this.Invoke("getSubXrefsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSubXrefsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms) {
            this.getSubXrefsAsDataSetAsync(currentPageNumber, pageSize, parms, null);
        }
        
        /// <remarks/>
        public void getSubXrefsAsDataSetAsync(int currentPageNumber, int pageSize, nameValuePairs[] parms, object userState) {
            if ((this.getSubXrefsAsDataSetOperationCompleted == null)) {
                this.getSubXrefsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubXrefsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("getSubXrefsAsDataSet", new object[] {
                        currentPageNumber,
                        pageSize,
                        parms}, this.getSubXrefsAsDataSetOperationCompleted, userState);
        }
        
        private void OngetSubXrefsAsDataSetOperationCompleted(object arg) {
            if ((this.getSubXrefsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubXrefsAsDataSetCompleted(this, new getSubXrefsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editLCCode", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LCCodeClass editLCCode(string actionType, LCCodeClass inItem) {
            object[] results = this.Invoke("editLCCode", new object[] {
                        actionType,
                        inItem});
            return ((LCCodeClass)(results[0]));
        }
        
        /// <remarks/>
        public void editLCCodeAsync(string actionType, LCCodeClass inItem) {
            this.editLCCodeAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editLCCodeAsync(string actionType, LCCodeClass inItem, object userState) {
            if ((this.editLCCodeOperationCompleted == null)) {
                this.editLCCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditLCCodeOperationCompleted);
            }
            this.InvokeAsync("editLCCode", new object[] {
                        actionType,
                        inItem}, this.editLCCodeOperationCompleted, userState);
        }
        
        private void OneditLCCodeOperationCompleted(object arg) {
            if ((this.editLCCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editLCCodeCompleted(this, new editLCCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/editLCCodeAsDataSet", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet editLCCodeAsDataSet(string actionType, LCCodeClass inItem) {
            object[] results = this.Invoke("editLCCodeAsDataSet", new object[] {
                        actionType,
                        inItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void editLCCodeAsDataSetAsync(string actionType, LCCodeClass inItem) {
            this.editLCCodeAsDataSetAsync(actionType, inItem, null);
        }
        
        /// <remarks/>
        public void editLCCodeAsDataSetAsync(string actionType, LCCodeClass inItem, object userState) {
            if ((this.editLCCodeAsDataSetOperationCompleted == null)) {
                this.editLCCodeAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditLCCodeAsDataSetOperationCompleted);
            }
            this.InvokeAsync("editLCCodeAsDataSet", new object[] {
                        actionType,
                        inItem}, this.editLCCodeAsDataSetOperationCompleted, userState);
        }
        
        private void OneditLCCodeAsDataSetOperationCompleted(object arg) {
            if ((this.editLCCodeAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editLCCodeAsDataSetCompleted(this, new editLCCodeAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ctDynamicsSLHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/getNewLCCode", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LCCodeClass getNewLCCode(LCCodeClass inTemplate) {
            object[] results = this.Invoke("getNewLCCode", new object[] {
                        inTemplate});
            return ((LCCodeClass)(results[0]));
        }
        
        /// <remarks/>
        public void getNewLCCodeAsync(LCCodeClass inTemplate) {
            this.getNewLCCodeAsync(inTemplate, null);
        }
        
        /// <remarks/>
        public void getNewLCCodeAsync(LCCodeClass inTemplate, object userState) {
            if ((this.getNewLCCodeOperationCompleted == null)) {
                this.getNewLCCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewLCCodeOperationCompleted);
            }
            this.InvokeAsync("getNewLCCode", new object[] {
                        inTemplate}, this.getNewLCCodeOperationCompleted, userState);
        }
        
        private void OngetNewLCCodeOperationCompleted(object arg) {
            if ((this.getNewLCCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewLCCodeCompleted(this, new getNewLCCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.catalinatechnology.com/services/ctDynamicsSL/ping", RequestNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", ResponseNamespace="http://www.catalinatechnology.com/services/ctDynamicsSL", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ping(string pingType, string siteID, string siteKey, string licenseKey, string licenseName, string licenseExpiration, string softwareName) {
            object[] results = this.Invoke("ping", new object[] {
                        pingType,
                        siteID,
                        siteKey,
                        licenseKey,
                        licenseName,
                        licenseExpiration,
                        softwareName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void pingAsync(string pingType, string siteID, string siteKey, string licenseKey, string licenseName, string licenseExpiration, string softwareName) {
            this.pingAsync(pingType, siteID, siteKey, licenseKey, licenseName, licenseExpiration, softwareName, null);
        }
        
        /// <remarks/>
        public void pingAsync(string pingType, string siteID, string siteKey, string licenseKey, string licenseName, string licenseExpiration, string softwareName, object userState) {
            if ((this.pingOperationCompleted == null)) {
                this.pingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingOperationCompleted);
            }
            this.InvokeAsync("ping", new object[] {
                        pingType,
                        siteID,
                        siteKey,
                        licenseKey,
                        licenseName,
                        licenseExpiration,
                        softwareName}, this.pingOperationCompleted, userState);
        }
        
        private void OnpingOperationCompleted(object arg) {
            if ((this.pingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pingCompleted(this, new pingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL", IsNullable=false)]
    public partial class ctDynamicsSLHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string licenseKeyField;
        
        private string licenseNameField;
        
        private string licenseExpirationField;
        
        private string softwareNameField;
        
        private string siteIDField;
        
        private string siteKeyField;
        
        private string userNameField;
        
        private string cpnyIDField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string licenseKey {
            get {
                return this.licenseKeyField;
            }
            set {
                this.licenseKeyField = value;
            }
        }
        
        /// <remarks/>
        public string licenseName {
            get {
                return this.licenseNameField;
            }
            set {
                this.licenseNameField = value;
            }
        }
        
        /// <remarks/>
        public string licenseExpiration {
            get {
                return this.licenseExpirationField;
            }
            set {
                this.licenseExpirationField = value;
            }
        }
        
        /// <remarks/>
        public string softwareName {
            get {
                return this.softwareNameField;
            }
            set {
                this.softwareNameField = value;
            }
        }
        
        /// <remarks/>
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string siteKey {
            get {
                return this.siteKeyField;
            }
            set {
                this.siteKeyField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string cpnyID {
            get {
                return this.cpnyIDField;
            }
            set {
                this.cpnyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class SubXref {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private short activeField;
        
        private string cpnyIDField;
        
        private string descrField;
        
        private string subField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public short Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string CpnyID {
            get {
                return this.cpnyIDField;
            }
            set {
                this.cpnyIDField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string Sub {
            get {
                return this.subField;
            }
            set {
                this.subField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class AcctXref {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string acctField;
        
        private string acctTypeField;
        
        private short activeField;
        
        private string cpnyIDField;
        
        private string descrField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Acct {
            get {
                return this.acctField;
            }
            set {
                this.acctField = value;
            }
        }
        
        /// <remarks/>
        public string AcctType {
            get {
                return this.acctTypeField;
            }
            set {
                this.acctTypeField = value;
            }
        }
        
        /// <remarks/>
        public short Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string CpnyID {
            get {
                return this.cpnyIDField;
            }
            set {
                this.cpnyIDField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class SlsTaxCat {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string catIdField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descrField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private int noteIdField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CatId {
            get {
                return this.catIdField;
            }
            set {
                this.catIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public int NoteId {
            get {
                return this.noteIdField;
            }
            set {
                this.noteIdField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Terms {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string applyToField;
        
        private short cODField;
        
        private short creditChkField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private short cycleField;
        
        private string descrField;
        
        private short discIntrvField;
        
        private double discPctField;
        
        private string discTypeField;
        
        private short dueIntrvField;
        
        private string dueTypeField;
        
        private string frequencyField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private short nbrInstallField;
        
        private int noteIdField;
        
        private string optionsField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string termsIdField;
        
        private string termsTypeField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ApplyTo {
            get {
                return this.applyToField;
            }
            set {
                this.applyToField = value;
            }
        }
        
        /// <remarks/>
        public short COD {
            get {
                return this.cODField;
            }
            set {
                this.cODField = value;
            }
        }
        
        /// <remarks/>
        public short CreditChk {
            get {
                return this.creditChkField;
            }
            set {
                this.creditChkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public short Cycle {
            get {
                return this.cycleField;
            }
            set {
                this.cycleField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public short DiscIntrv {
            get {
                return this.discIntrvField;
            }
            set {
                this.discIntrvField = value;
            }
        }
        
        /// <remarks/>
        public double DiscPct {
            get {
                return this.discPctField;
            }
            set {
                this.discPctField = value;
            }
        }
        
        /// <remarks/>
        public string DiscType {
            get {
                return this.discTypeField;
            }
            set {
                this.discTypeField = value;
            }
        }
        
        /// <remarks/>
        public short DueIntrv {
            get {
                return this.dueIntrvField;
            }
            set {
                this.dueIntrvField = value;
            }
        }
        
        /// <remarks/>
        public string DueType {
            get {
                return this.dueTypeField;
            }
            set {
                this.dueTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public short NbrInstall {
            get {
                return this.nbrInstallField;
            }
            set {
                this.nbrInstallField = value;
            }
        }
        
        /// <remarks/>
        public int NoteId {
            get {
                return this.noteIdField;
            }
            set {
                this.noteIdField = value;
            }
        }
        
        /// <remarks/>
        public string Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string TermsId {
            get {
                return this.termsIdField;
            }
            set {
                this.termsIdField = value;
            }
        }
        
        /// <remarks/>
        public string TermsType {
            get {
                return this.termsTypeField;
            }
            set {
                this.termsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Batch {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string acctField;
        
        private short autoRevField;
        
        private short autoRevCopyField;
        
        private string balanceTypeField;
        
        private string bankAcctField;
        
        private string bankSubField;
        
        private string baseCuryIDField;
        
        private string batNbrField;
        
        private string batTypeField;
        
        private double clearamtField;
        
        private short clearedField;
        
        private string cpnyIDField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private double crTotField;
        
        private double ctrlTotField;
        
        private double curyCrTotField;
        
        private double curyCtrlTotField;
        
        private double curyDepositAmtField;
        
        private double curyDrTotField;
        
        private System.DateTime curyEffDateField;
        
        private string curyIdField;
        
        private string curyMultDivField;
        
        private double curyRateField;
        
        private string curyRateTypeField;
        
        private short cycleField;
        
        private System.DateTime dateClrField;
        
        private System.DateTime dateEntField;
        
        private double depositAmtField;
        
        private string descrField;
        
        private double drTotField;
        
        private string editScrnNbrField;
        
        private string gLPostOptField;
        
        private string jrnlTypeField;
        
        private string ledgerIDField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private string moduleField;
        
        private short nbrCycleField;
        
        private int noteIDField;
        
        private string origBatNbrField;
        
        private string origCpnyIDField;
        
        private string origScrnNbrField;
        
        private string perEntField;
        
        private string perPostField;
        
        private short rlsedField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string statusField;
        
        private string subField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Acct {
            get {
                return this.acctField;
            }
            set {
                this.acctField = value;
            }
        }
        
        /// <remarks/>
        public short AutoRev {
            get {
                return this.autoRevField;
            }
            set {
                this.autoRevField = value;
            }
        }
        
        /// <remarks/>
        public short AutoRevCopy {
            get {
                return this.autoRevCopyField;
            }
            set {
                this.autoRevCopyField = value;
            }
        }
        
        /// <remarks/>
        public string BalanceType {
            get {
                return this.balanceTypeField;
            }
            set {
                this.balanceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BankAcct {
            get {
                return this.bankAcctField;
            }
            set {
                this.bankAcctField = value;
            }
        }
        
        /// <remarks/>
        public string BankSub {
            get {
                return this.bankSubField;
            }
            set {
                this.bankSubField = value;
            }
        }
        
        /// <remarks/>
        public string BaseCuryID {
            get {
                return this.baseCuryIDField;
            }
            set {
                this.baseCuryIDField = value;
            }
        }
        
        /// <remarks/>
        public string BatNbr {
            get {
                return this.batNbrField;
            }
            set {
                this.batNbrField = value;
            }
        }
        
        /// <remarks/>
        public string BatType {
            get {
                return this.batTypeField;
            }
            set {
                this.batTypeField = value;
            }
        }
        
        /// <remarks/>
        public double clearamt {
            get {
                return this.clearamtField;
            }
            set {
                this.clearamtField = value;
            }
        }
        
        /// <remarks/>
        public short Cleared {
            get {
                return this.clearedField;
            }
            set {
                this.clearedField = value;
            }
        }
        
        /// <remarks/>
        public string CpnyID {
            get {
                return this.cpnyIDField;
            }
            set {
                this.cpnyIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public double CrTot {
            get {
                return this.crTotField;
            }
            set {
                this.crTotField = value;
            }
        }
        
        /// <remarks/>
        public double CtrlTot {
            get {
                return this.ctrlTotField;
            }
            set {
                this.ctrlTotField = value;
            }
        }
        
        /// <remarks/>
        public double CuryCrTot {
            get {
                return this.curyCrTotField;
            }
            set {
                this.curyCrTotField = value;
            }
        }
        
        /// <remarks/>
        public double CuryCtrlTot {
            get {
                return this.curyCtrlTotField;
            }
            set {
                this.curyCtrlTotField = value;
            }
        }
        
        /// <remarks/>
        public double CuryDepositAmt {
            get {
                return this.curyDepositAmtField;
            }
            set {
                this.curyDepositAmtField = value;
            }
        }
        
        /// <remarks/>
        public double CuryDrTot {
            get {
                return this.curyDrTotField;
            }
            set {
                this.curyDrTotField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CuryEffDate {
            get {
                return this.curyEffDateField;
            }
            set {
                this.curyEffDateField = value;
            }
        }
        
        /// <remarks/>
        public string CuryId {
            get {
                return this.curyIdField;
            }
            set {
                this.curyIdField = value;
            }
        }
        
        /// <remarks/>
        public string CuryMultDiv {
            get {
                return this.curyMultDivField;
            }
            set {
                this.curyMultDivField = value;
            }
        }
        
        /// <remarks/>
        public double CuryRate {
            get {
                return this.curyRateField;
            }
            set {
                this.curyRateField = value;
            }
        }
        
        /// <remarks/>
        public string CuryRateType {
            get {
                return this.curyRateTypeField;
            }
            set {
                this.curyRateTypeField = value;
            }
        }
        
        /// <remarks/>
        public short Cycle {
            get {
                return this.cycleField;
            }
            set {
                this.cycleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateClr {
            get {
                return this.dateClrField;
            }
            set {
                this.dateClrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateEnt {
            get {
                return this.dateEntField;
            }
            set {
                this.dateEntField = value;
            }
        }
        
        /// <remarks/>
        public double DepositAmt {
            get {
                return this.depositAmtField;
            }
            set {
                this.depositAmtField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public double DrTot {
            get {
                return this.drTotField;
            }
            set {
                this.drTotField = value;
            }
        }
        
        /// <remarks/>
        public string EditScrnNbr {
            get {
                return this.editScrnNbrField;
            }
            set {
                this.editScrnNbrField = value;
            }
        }
        
        /// <remarks/>
        public string GLPostOpt {
            get {
                return this.gLPostOptField;
            }
            set {
                this.gLPostOptField = value;
            }
        }
        
        /// <remarks/>
        public string JrnlType {
            get {
                return this.jrnlTypeField;
            }
            set {
                this.jrnlTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LedgerID {
            get {
                return this.ledgerIDField;
            }
            set {
                this.ledgerIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
            }
        }
        
        /// <remarks/>
        public short NbrCycle {
            get {
                return this.nbrCycleField;
            }
            set {
                this.nbrCycleField = value;
            }
        }
        
        /// <remarks/>
        public int NoteID {
            get {
                return this.noteIDField;
            }
            set {
                this.noteIDField = value;
            }
        }
        
        /// <remarks/>
        public string OrigBatNbr {
            get {
                return this.origBatNbrField;
            }
            set {
                this.origBatNbrField = value;
            }
        }
        
        /// <remarks/>
        public string OrigCpnyID {
            get {
                return this.origCpnyIDField;
            }
            set {
                this.origCpnyIDField = value;
            }
        }
        
        /// <remarks/>
        public string OrigScrnNbr {
            get {
                return this.origScrnNbrField;
            }
            set {
                this.origScrnNbrField = value;
            }
        }
        
        /// <remarks/>
        public string PerEnt {
            get {
                return this.perEntField;
            }
            set {
                this.perEntField = value;
            }
        }
        
        /// <remarks/>
        public string PerPost {
            get {
                return this.perPostField;
            }
            set {
                this.perPostField = value;
            }
        }
        
        /// <remarks/>
        public short Rlsed {
            get {
                return this.rlsedField;
            }
            set {
                this.rlsedField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Sub {
            get {
                return this.subField;
            }
            set {
                this.subField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class SubAcct {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private short activeField;
        
        private string consolSubField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descrField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private int noteIDField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string subField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public short Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string ConsolSub {
            get {
                return this.consolSubField;
            }
            set {
                this.consolSubField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public int NoteID {
            get {
                return this.noteIDField;
            }
            set {
                this.noteIDField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string Sub {
            get {
                return this.subField;
            }
            set {
                this.subField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Account {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private string acctField;
        
        private string acctTypeField;
        
        private string acct_CatField;
        
        private string acct_Cat_SWField;
        
        private short activeField;
        
        private string classIDField;
        
        private string consolAcctField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string curyIdField;
        
        private string descrField;
        
        private string employ_SwField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private int noteIDField;
        
        private string ratioGrpField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string summPostField;
        
        private string unitofMeasField;
        
        private string units_SWField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        private string validateIDField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Acct {
            get {
                return this.acctField;
            }
            set {
                this.acctField = value;
            }
        }
        
        /// <remarks/>
        public string AcctType {
            get {
                return this.acctTypeField;
            }
            set {
                this.acctTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Acct_Cat {
            get {
                return this.acct_CatField;
            }
            set {
                this.acct_CatField = value;
            }
        }
        
        /// <remarks/>
        public string Acct_Cat_SW {
            get {
                return this.acct_Cat_SWField;
            }
            set {
                this.acct_Cat_SWField = value;
            }
        }
        
        /// <remarks/>
        public short Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string ClassID {
            get {
                return this.classIDField;
            }
            set {
                this.classIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConsolAcct {
            get {
                return this.consolAcctField;
            }
            set {
                this.consolAcctField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string CuryId {
            get {
                return this.curyIdField;
            }
            set {
                this.curyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string Employ_Sw {
            get {
                return this.employ_SwField;
            }
            set {
                this.employ_SwField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public int NoteID {
            get {
                return this.noteIDField;
            }
            set {
                this.noteIDField = value;
            }
        }
        
        /// <remarks/>
        public string RatioGrp {
            get {
                return this.ratioGrpField;
            }
            set {
                this.ratioGrpField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string SummPost {
            get {
                return this.summPostField;
            }
            set {
                this.summPostField = value;
            }
        }
        
        /// <remarks/>
        public string UnitofMeas {
            get {
                return this.unitofMeasField;
            }
            set {
                this.unitofMeasField = value;
            }
        }
        
        /// <remarks/>
        public string Units_SW {
            get {
                return this.units_SWField;
            }
            set {
                this.units_SWField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
        
        /// <remarks/>
        public string ValidateID {
            get {
                return this.validateIDField;
            }
            set {
                this.validateIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class SegDef {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private short activeField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descriptionField;
        
        private string fieldClassField;
        
        private string fieldClassNameField;
        
        private string idField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private string segNumberField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public short Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FieldClass {
            get {
                return this.fieldClassField;
            }
            set {
                this.fieldClassField = value;
            }
        }
        
        /// <remarks/>
        public string FieldClassName {
            get {
                return this.fieldClassNameField;
            }
            set {
                this.fieldClassNameField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string SegNumber {
            get {
                return this.segNumberField;
            }
            set {
                this.segNumberField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Country {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private string countryIDField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descrField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private int noteIDField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public int NoteID {
            get {
                return this.noteIDField;
            }
            set {
                this.noteIDField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class State {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descrField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string stateProvIdField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string StateProvId {
            get {
                return this.stateProvIdField;
            }
            set {
                this.stateProvIdField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class SalesTax {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string accruTaxAcctField;
        
        private string accruTaxesubAcctField;
        
        private string adjByTermsDiscField;
        
        private string applTermDiscField;
        
        private short applTermsDiscTaxField;
        
        private string aPTaxPtDateField;
        
        private string aRTaxPtDateField;
        
        private string catExcept00Field;
        
        private string catExcept01Field;
        
        private string catExcept02Field;
        
        private string catExcept03Field;
        
        private string catExcept04Field;
        
        private string catExcept05Field;
        
        private string catFlgField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descrField;
        
        private string exemptionField;
        
        private string exemTaxIdField;
        
        private short exp_to_Proj_SwField;
        
        private string expTaxAcctField;
        
        private string expTaxesubField;
        
        private string filingLocField;
        
        private short groupDetCntField;
        
        private string groupIDField;
        
        private string groupRuleField;
        
        private string inclFrtField;
        
        private string inclInDocTotField;
        
        private string inclmiscField;
        
        private string liabTaxAcctField;
        
        private string liabTaxesubField;
        
        private string localCodeField;
        
        private string longIdField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private short lvl2ExmptField;
        
        private System.DateTime newRateDateField;
        
        private double newTaxRateField;
        
        private int noteIdField;
        
        private double oldTaxRateField;
        
        private string oPTaxPtDateField;
        
        private string pOTaxPtDateField;
        
        private string prcTaxInclField;
        
        private string purTaxAcctField;
        
        private string purTaxDiscAcctField;
        
        private string purTaxDiscSubField;
        
        private string purTaxesubField;
        
        private double rateAboveMaxField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string slsTaxAcctField;
        
        private string slsTaxDiscAcctField;
        
        private string slsTaxDiscSubField;
        
        private string slsTaxesubField;
        
        private string taxAuthLvlField;
        
        private string taxBasisField;
        
        private string taxCalcLvlField;
        
        private string taxCalcMethField;
        
        private string taxCalcTypeField;
        
        private string taxIdField;
        
        private double taxRateField;
        
        private System.DateTime taxRvsdDateField;
        
        private string taxTypeField;
        
        private double txblAdjPctField;
        
        private double txblMaxField;
        
        private double txblMinField;
        
        private string txblMinMaxCuryIDField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        private string vendIDField;
        
        private short voucherTaxField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AccruTaxAcct {
            get {
                return this.accruTaxAcctField;
            }
            set {
                this.accruTaxAcctField = value;
            }
        }
        
        /// <remarks/>
        public string AccruTaxesubAcct {
            get {
                return this.accruTaxesubAcctField;
            }
            set {
                this.accruTaxesubAcctField = value;
            }
        }
        
        /// <remarks/>
        public string AdjByTermsDisc {
            get {
                return this.adjByTermsDiscField;
            }
            set {
                this.adjByTermsDiscField = value;
            }
        }
        
        /// <remarks/>
        public string ApplTermDisc {
            get {
                return this.applTermDiscField;
            }
            set {
                this.applTermDiscField = value;
            }
        }
        
        /// <remarks/>
        public short ApplTermsDiscTax {
            get {
                return this.applTermsDiscTaxField;
            }
            set {
                this.applTermsDiscTaxField = value;
            }
        }
        
        /// <remarks/>
        public string APTaxPtDate {
            get {
                return this.aPTaxPtDateField;
            }
            set {
                this.aPTaxPtDateField = value;
            }
        }
        
        /// <remarks/>
        public string ARTaxPtDate {
            get {
                return this.aRTaxPtDateField;
            }
            set {
                this.aRTaxPtDateField = value;
            }
        }
        
        /// <remarks/>
        public string CatExcept00 {
            get {
                return this.catExcept00Field;
            }
            set {
                this.catExcept00Field = value;
            }
        }
        
        /// <remarks/>
        public string CatExcept01 {
            get {
                return this.catExcept01Field;
            }
            set {
                this.catExcept01Field = value;
            }
        }
        
        /// <remarks/>
        public string CatExcept02 {
            get {
                return this.catExcept02Field;
            }
            set {
                this.catExcept02Field = value;
            }
        }
        
        /// <remarks/>
        public string CatExcept03 {
            get {
                return this.catExcept03Field;
            }
            set {
                this.catExcept03Field = value;
            }
        }
        
        /// <remarks/>
        public string CatExcept04 {
            get {
                return this.catExcept04Field;
            }
            set {
                this.catExcept04Field = value;
            }
        }
        
        /// <remarks/>
        public string CatExcept05 {
            get {
                return this.catExcept05Field;
            }
            set {
                this.catExcept05Field = value;
            }
        }
        
        /// <remarks/>
        public string CatFlg {
            get {
                return this.catFlgField;
            }
            set {
                this.catFlgField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string Exemption {
            get {
                return this.exemptionField;
            }
            set {
                this.exemptionField = value;
            }
        }
        
        /// <remarks/>
        public string ExemTaxId {
            get {
                return this.exemTaxIdField;
            }
            set {
                this.exemTaxIdField = value;
            }
        }
        
        /// <remarks/>
        public short Exp_to_Proj_Sw {
            get {
                return this.exp_to_Proj_SwField;
            }
            set {
                this.exp_to_Proj_SwField = value;
            }
        }
        
        /// <remarks/>
        public string ExpTaxAcct {
            get {
                return this.expTaxAcctField;
            }
            set {
                this.expTaxAcctField = value;
            }
        }
        
        /// <remarks/>
        public string ExpTaxesub {
            get {
                return this.expTaxesubField;
            }
            set {
                this.expTaxesubField = value;
            }
        }
        
        /// <remarks/>
        public string FilingLoc {
            get {
                return this.filingLocField;
            }
            set {
                this.filingLocField = value;
            }
        }
        
        /// <remarks/>
        public short GroupDetCnt {
            get {
                return this.groupDetCntField;
            }
            set {
                this.groupDetCntField = value;
            }
        }
        
        /// <remarks/>
        public string GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupRule {
            get {
                return this.groupRuleField;
            }
            set {
                this.groupRuleField = value;
            }
        }
        
        /// <remarks/>
        public string InclFrt {
            get {
                return this.inclFrtField;
            }
            set {
                this.inclFrtField = value;
            }
        }
        
        /// <remarks/>
        public string InclInDocTot {
            get {
                return this.inclInDocTotField;
            }
            set {
                this.inclInDocTotField = value;
            }
        }
        
        /// <remarks/>
        public string Inclmisc {
            get {
                return this.inclmiscField;
            }
            set {
                this.inclmiscField = value;
            }
        }
        
        /// <remarks/>
        public string LiabTaxAcct {
            get {
                return this.liabTaxAcctField;
            }
            set {
                this.liabTaxAcctField = value;
            }
        }
        
        /// <remarks/>
        public string LiabTaxesub {
            get {
                return this.liabTaxesubField;
            }
            set {
                this.liabTaxesubField = value;
            }
        }
        
        /// <remarks/>
        public string LocalCode {
            get {
                return this.localCodeField;
            }
            set {
                this.localCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LongId {
            get {
                return this.longIdField;
            }
            set {
                this.longIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public short Lvl2Exmpt {
            get {
                return this.lvl2ExmptField;
            }
            set {
                this.lvl2ExmptField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NewRateDate {
            get {
                return this.newRateDateField;
            }
            set {
                this.newRateDateField = value;
            }
        }
        
        /// <remarks/>
        public double NewTaxRate {
            get {
                return this.newTaxRateField;
            }
            set {
                this.newTaxRateField = value;
            }
        }
        
        /// <remarks/>
        public int NoteId {
            get {
                return this.noteIdField;
            }
            set {
                this.noteIdField = value;
            }
        }
        
        /// <remarks/>
        public double OldTaxRate {
            get {
                return this.oldTaxRateField;
            }
            set {
                this.oldTaxRateField = value;
            }
        }
        
        /// <remarks/>
        public string OPTaxPtDate {
            get {
                return this.oPTaxPtDateField;
            }
            set {
                this.oPTaxPtDateField = value;
            }
        }
        
        /// <remarks/>
        public string POTaxPtDate {
            get {
                return this.pOTaxPtDateField;
            }
            set {
                this.pOTaxPtDateField = value;
            }
        }
        
        /// <remarks/>
        public string PrcTaxIncl {
            get {
                return this.prcTaxInclField;
            }
            set {
                this.prcTaxInclField = value;
            }
        }
        
        /// <remarks/>
        public string PurTaxAcct {
            get {
                return this.purTaxAcctField;
            }
            set {
                this.purTaxAcctField = value;
            }
        }
        
        /// <remarks/>
        public string PurTaxDiscAcct {
            get {
                return this.purTaxDiscAcctField;
            }
            set {
                this.purTaxDiscAcctField = value;
            }
        }
        
        /// <remarks/>
        public string PurTaxDiscSub {
            get {
                return this.purTaxDiscSubField;
            }
            set {
                this.purTaxDiscSubField = value;
            }
        }
        
        /// <remarks/>
        public string PurTaxesub {
            get {
                return this.purTaxesubField;
            }
            set {
                this.purTaxesubField = value;
            }
        }
        
        /// <remarks/>
        public double RateAboveMax {
            get {
                return this.rateAboveMaxField;
            }
            set {
                this.rateAboveMaxField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string SlsTaxAcct {
            get {
                return this.slsTaxAcctField;
            }
            set {
                this.slsTaxAcctField = value;
            }
        }
        
        /// <remarks/>
        public string SlsTaxDiscAcct {
            get {
                return this.slsTaxDiscAcctField;
            }
            set {
                this.slsTaxDiscAcctField = value;
            }
        }
        
        /// <remarks/>
        public string SlsTaxDiscSub {
            get {
                return this.slsTaxDiscSubField;
            }
            set {
                this.slsTaxDiscSubField = value;
            }
        }
        
        /// <remarks/>
        public string SlsTaxesub {
            get {
                return this.slsTaxesubField;
            }
            set {
                this.slsTaxesubField = value;
            }
        }
        
        /// <remarks/>
        public string TaxAuthLvl {
            get {
                return this.taxAuthLvlField;
            }
            set {
                this.taxAuthLvlField = value;
            }
        }
        
        /// <remarks/>
        public string TaxBasis {
            get {
                return this.taxBasisField;
            }
            set {
                this.taxBasisField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCalcLvl {
            get {
                return this.taxCalcLvlField;
            }
            set {
                this.taxCalcLvlField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCalcMeth {
            get {
                return this.taxCalcMethField;
            }
            set {
                this.taxCalcMethField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCalcType {
            get {
                return this.taxCalcTypeField;
            }
            set {
                this.taxCalcTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TaxId {
            get {
                return this.taxIdField;
            }
            set {
                this.taxIdField = value;
            }
        }
        
        /// <remarks/>
        public double TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TaxRvsdDate {
            get {
                return this.taxRvsdDateField;
            }
            set {
                this.taxRvsdDateField = value;
            }
        }
        
        /// <remarks/>
        public string TaxType {
            get {
                return this.taxTypeField;
            }
            set {
                this.taxTypeField = value;
            }
        }
        
        /// <remarks/>
        public double TxblAdjPct {
            get {
                return this.txblAdjPctField;
            }
            set {
                this.txblAdjPctField = value;
            }
        }
        
        /// <remarks/>
        public double TxblMax {
            get {
                return this.txblMaxField;
            }
            set {
                this.txblMaxField = value;
            }
        }
        
        /// <remarks/>
        public double TxblMin {
            get {
                return this.txblMinField;
            }
            set {
                this.txblMinField = value;
            }
        }
        
        /// <remarks/>
        public string TxblMinMaxCuryID {
            get {
                return this.txblMinMaxCuryIDField;
            }
            set {
                this.txblMinMaxCuryIDField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
        
        /// <remarks/>
        public string VendID {
            get {
                return this.vendIDField;
            }
            set {
                this.vendIDField = value;
            }
        }
        
        /// <remarks/>
        public short VoucherTax {
            get {
                return this.voucherTaxField;
            }
            set {
                this.voucherTaxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Salesperson {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private string addr1Field;
        
        private string addr2Field;
        
        private string attnField;
        
        private string cityField;
        
        private double cmmnPctField;
        
        private string countryField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string eMailAddrField;
        
        private string faxField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private string nameField;
        
        private int noteIdField;
        
        private string perNbrField;
        
        private string phoneField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string salutField;
        
        private string slsperIdField;
        
        private string stateField;
        
        private string territoryField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        private string zipField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Addr1 {
            get {
                return this.addr1Field;
            }
            set {
                this.addr1Field = value;
            }
        }
        
        /// <remarks/>
        public string Addr2 {
            get {
                return this.addr2Field;
            }
            set {
                this.addr2Field = value;
            }
        }
        
        /// <remarks/>
        public string Attn {
            get {
                return this.attnField;
            }
            set {
                this.attnField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public double CmmnPct {
            get {
                return this.cmmnPctField;
            }
            set {
                this.cmmnPctField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string EMailAddr {
            get {
                return this.eMailAddrField;
            }
            set {
                this.eMailAddrField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int NoteId {
            get {
                return this.noteIdField;
            }
            set {
                this.noteIdField = value;
            }
        }
        
        /// <remarks/>
        public string PerNbr {
            get {
                return this.perNbrField;
            }
            set {
                this.perNbrField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string Salut {
            get {
                return this.salutField;
            }
            set {
                this.salutField = value;
            }
        }
        
        /// <remarks/>
        public string SlsperId {
            get {
                return this.slsperIdField;
            }
            set {
                this.slsperIdField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Territory {
            get {
                return this.territoryField;
            }
            set {
                this.territoryField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Snote {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private System.DateTime dtRevisedDateField;
        
        private int nIDField;
        
        private string sLevelNameField;
        
        private string sTableNameField;
        
        private string sNoteTextField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dtRevisedDate {
            get {
                return this.dtRevisedDateField;
            }
            set {
                this.dtRevisedDateField = value;
            }
        }
        
        /// <remarks/>
        public int nID {
            get {
                return this.nIDField;
            }
            set {
                this.nIDField = value;
            }
        }
        
        /// <remarks/>
        public string sLevelName {
            get {
                return this.sLevelNameField;
            }
            set {
                this.sLevelNameField = value;
            }
        }
        
        /// <remarks/>
        public string sTableName {
            get {
                return this.sTableNameField;
            }
            set {
                this.sTableNameField = value;
            }
        }
        
        /// <remarks/>
        public string sNoteText {
            get {
                return this.sNoteTextField;
            }
            set {
                this.sNoteTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class Vendor {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string addr1Field;
        
        private string addr2Field;
        
        private string aPAcctField;
        
        private string aPSubField;
        
        private string attnField;
        
        private short bkupWthldField;
        
        private string cityField;
        
        private string classIDField;
        
        private short contTwc1099Field;
        
        private string countryField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string curr1099YrField;
        
        private string curyIdField;
        
        private string curyRateTypeField;
        
        private string dfltBoxField;
        
        private string dfltOrdFromIdField;
        
        private string dfltPurchaseTypeField;
        
        private string directDepositField;
        
        private string docPublishingFlagField;
        
        private string eMailAddrField;
        
        private string excludeFreightField;
        
        private string expAcctField;
        
        private string expSubField;
        
        private string faxField;
        
        private string lCCodeField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private short multiChkField;
        
        private string nameField;
        
        private string next1099YrField;
        
        private int noteIDField;
        
        private string payDateDfltField;
        
        private string perNbrField;
        
        private string phoneField;
        
        private string pmtMethodField;
        
        private string pPayAcctField;
        
        private string pPaySubField;
        
        private string rcptPctActField;
        
        private double rcptPctMaxField;
        
        private double rcptPctMinField;
        
        private string recipientName2Field;
        
        private string remitAddr1Field;
        
        private string remitAddr2Field;
        
        private string remitAttnField;
        
        private string remitCityField;
        
        private string remitCountryField;
        
        private string remitFaxField;
        
        private string remitNameField;
        
        private string remitPhoneField;
        
        private string remitSalutField;
        
        private string remitStateField;
        
        private string remitZipField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string salutField;
        
        private string stateField;
        
        private string statusField;
        
        private string taxDfltField;
        
        private string taxId00Field;
        
        private string taxId01Field;
        
        private string taxId02Field;
        
        private string taxId03Field;
        
        private string taxLocIdField;
        
        private string taxPostField;
        
        private string taxRegNbrField;
        
        private string termsField;
        
        private string tINField;
        
        private string tINNAMEField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string user5Field;
        
        private string user6Field;
        
        private System.DateTime user7Field;
        
        private System.DateTime user8Field;
        
        private short vend1099Field;
        
        private string vend1099AddrTypeField;
        
        private string vendIdField;
        
        private string zipField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Addr1 {
            get {
                return this.addr1Field;
            }
            set {
                this.addr1Field = value;
            }
        }
        
        /// <remarks/>
        public string Addr2 {
            get {
                return this.addr2Field;
            }
            set {
                this.addr2Field = value;
            }
        }
        
        /// <remarks/>
        public string APAcct {
            get {
                return this.aPAcctField;
            }
            set {
                this.aPAcctField = value;
            }
        }
        
        /// <remarks/>
        public string APSub {
            get {
                return this.aPSubField;
            }
            set {
                this.aPSubField = value;
            }
        }
        
        /// <remarks/>
        public string Attn {
            get {
                return this.attnField;
            }
            set {
                this.attnField = value;
            }
        }
        
        /// <remarks/>
        public short BkupWthld {
            get {
                return this.bkupWthldField;
            }
            set {
                this.bkupWthldField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string ClassID {
            get {
                return this.classIDField;
            }
            set {
                this.classIDField = value;
            }
        }
        
        /// <remarks/>
        public short ContTwc1099 {
            get {
                return this.contTwc1099Field;
            }
            set {
                this.contTwc1099Field = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Curr1099Yr {
            get {
                return this.curr1099YrField;
            }
            set {
                this.curr1099YrField = value;
            }
        }
        
        /// <remarks/>
        public string CuryId {
            get {
                return this.curyIdField;
            }
            set {
                this.curyIdField = value;
            }
        }
        
        /// <remarks/>
        public string CuryRateType {
            get {
                return this.curyRateTypeField;
            }
            set {
                this.curyRateTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DfltBox {
            get {
                return this.dfltBoxField;
            }
            set {
                this.dfltBoxField = value;
            }
        }
        
        /// <remarks/>
        public string DfltOrdFromId {
            get {
                return this.dfltOrdFromIdField;
            }
            set {
                this.dfltOrdFromIdField = value;
            }
        }
        
        /// <remarks/>
        public string DfltPurchaseType {
            get {
                return this.dfltPurchaseTypeField;
            }
            set {
                this.dfltPurchaseTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DirectDeposit {
            get {
                return this.directDepositField;
            }
            set {
                this.directDepositField = value;
            }
        }
        
        /// <remarks/>
        public string DocPublishingFlag {
            get {
                return this.docPublishingFlagField;
            }
            set {
                this.docPublishingFlagField = value;
            }
        }
        
        /// <remarks/>
        public string EMailAddr {
            get {
                return this.eMailAddrField;
            }
            set {
                this.eMailAddrField = value;
            }
        }
        
        /// <remarks/>
        public string ExcludeFreight {
            get {
                return this.excludeFreightField;
            }
            set {
                this.excludeFreightField = value;
            }
        }
        
        /// <remarks/>
        public string ExpAcct {
            get {
                return this.expAcctField;
            }
            set {
                this.expAcctField = value;
            }
        }
        
        /// <remarks/>
        public string ExpSub {
            get {
                return this.expSubField;
            }
            set {
                this.expSubField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string LCCode {
            get {
                return this.lCCodeField;
            }
            set {
                this.lCCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public short MultiChk {
            get {
                return this.multiChkField;
            }
            set {
                this.multiChkField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Next1099Yr {
            get {
                return this.next1099YrField;
            }
            set {
                this.next1099YrField = value;
            }
        }
        
        /// <remarks/>
        public int NoteID {
            get {
                return this.noteIDField;
            }
            set {
                this.noteIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayDateDflt {
            get {
                return this.payDateDfltField;
            }
            set {
                this.payDateDfltField = value;
            }
        }
        
        /// <remarks/>
        public string PerNbr {
            get {
                return this.perNbrField;
            }
            set {
                this.perNbrField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string PmtMethod {
            get {
                return this.pmtMethodField;
            }
            set {
                this.pmtMethodField = value;
            }
        }
        
        /// <remarks/>
        public string PPayAcct {
            get {
                return this.pPayAcctField;
            }
            set {
                this.pPayAcctField = value;
            }
        }
        
        /// <remarks/>
        public string PPaySub {
            get {
                return this.pPaySubField;
            }
            set {
                this.pPaySubField = value;
            }
        }
        
        /// <remarks/>
        public string RcptPctAct {
            get {
                return this.rcptPctActField;
            }
            set {
                this.rcptPctActField = value;
            }
        }
        
        /// <remarks/>
        public double RcptPctMax {
            get {
                return this.rcptPctMaxField;
            }
            set {
                this.rcptPctMaxField = value;
            }
        }
        
        /// <remarks/>
        public double RcptPctMin {
            get {
                return this.rcptPctMinField;
            }
            set {
                this.rcptPctMinField = value;
            }
        }
        
        /// <remarks/>
        public string RecipientName2 {
            get {
                return this.recipientName2Field;
            }
            set {
                this.recipientName2Field = value;
            }
        }
        
        /// <remarks/>
        public string RemitAddr1 {
            get {
                return this.remitAddr1Field;
            }
            set {
                this.remitAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string RemitAddr2 {
            get {
                return this.remitAddr2Field;
            }
            set {
                this.remitAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string RemitAttn {
            get {
                return this.remitAttnField;
            }
            set {
                this.remitAttnField = value;
            }
        }
        
        /// <remarks/>
        public string RemitCity {
            get {
                return this.remitCityField;
            }
            set {
                this.remitCityField = value;
            }
        }
        
        /// <remarks/>
        public string RemitCountry {
            get {
                return this.remitCountryField;
            }
            set {
                this.remitCountryField = value;
            }
        }
        
        /// <remarks/>
        public string RemitFax {
            get {
                return this.remitFaxField;
            }
            set {
                this.remitFaxField = value;
            }
        }
        
        /// <remarks/>
        public string RemitName {
            get {
                return this.remitNameField;
            }
            set {
                this.remitNameField = value;
            }
        }
        
        /// <remarks/>
        public string RemitPhone {
            get {
                return this.remitPhoneField;
            }
            set {
                this.remitPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string RemitSalut {
            get {
                return this.remitSalutField;
            }
            set {
                this.remitSalutField = value;
            }
        }
        
        /// <remarks/>
        public string RemitState {
            get {
                return this.remitStateField;
            }
            set {
                this.remitStateField = value;
            }
        }
        
        /// <remarks/>
        public string RemitZip {
            get {
                return this.remitZipField;
            }
            set {
                this.remitZipField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string Salut {
            get {
                return this.salutField;
            }
            set {
                this.salutField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TaxDflt {
            get {
                return this.taxDfltField;
            }
            set {
                this.taxDfltField = value;
            }
        }
        
        /// <remarks/>
        public string TaxId00 {
            get {
                return this.taxId00Field;
            }
            set {
                this.taxId00Field = value;
            }
        }
        
        /// <remarks/>
        public string TaxId01 {
            get {
                return this.taxId01Field;
            }
            set {
                this.taxId01Field = value;
            }
        }
        
        /// <remarks/>
        public string TaxId02 {
            get {
                return this.taxId02Field;
            }
            set {
                this.taxId02Field = value;
            }
        }
        
        /// <remarks/>
        public string TaxId03 {
            get {
                return this.taxId03Field;
            }
            set {
                this.taxId03Field = value;
            }
        }
        
        /// <remarks/>
        public string TaxLocId {
            get {
                return this.taxLocIdField;
            }
            set {
                this.taxLocIdField = value;
            }
        }
        
        /// <remarks/>
        public string TaxPost {
            get {
                return this.taxPostField;
            }
            set {
                this.taxPostField = value;
            }
        }
        
        /// <remarks/>
        public string TaxRegNbr {
            get {
                return this.taxRegNbrField;
            }
            set {
                this.taxRegNbrField = value;
            }
        }
        
        /// <remarks/>
        public string Terms {
            get {
                return this.termsField;
            }
            set {
                this.termsField = value;
            }
        }
        
        /// <remarks/>
        public string TIN {
            get {
                return this.tINField;
            }
            set {
                this.tINField = value;
            }
        }
        
        /// <remarks/>
        public string TINNAME {
            get {
                return this.tINNAMEField;
            }
            set {
                this.tINNAMEField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public string User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
        
        /// <remarks/>
        public short Vend1099 {
            get {
                return this.vend1099Field;
            }
            set {
                this.vend1099Field = value;
            }
        }
        
        /// <remarks/>
        public string Vend1099AddrType {
            get {
                return this.vend1099AddrTypeField;
            }
            set {
                this.vend1099AddrTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VendId {
            get {
                return this.vendIdField;
            }
            set {
                this.vendIdField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class company {
        
        private string errorMessageField;
        
        private int resultCodeField;
        
        private short activeField;
        
        private string addr1Field;
        
        private string addr2Field;
        
        private string baseCuryIDField;
        
        private string cityField;
        
        private string countryField;
        
        private string cpnyIDField;
        
        private string cpnyCOAField;
        
        private string cpnySubField;
        
        private string cpnyNameField;
        
        private string databaseNameField;
        
        private string faxField;
        
        private string iASEmailAddressField;
        
        private string iASPubKeyField;
        
        private short iASPubKeySizeField;
        
        private short iASRemoteAccessField;
        
        private string interCpnyIDField;
        
        private short localDomainField;
        
        private string master_Fed_IDField;
        
        private string phoneField;
        
        private string stateField;
        
        private string user1Field;
        
        private string user2Field;
        
        private double user3Field;
        
        private double user4Field;
        
        private string zipField;
        
        private int cpnyColorField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public short Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Addr1 {
            get {
                return this.addr1Field;
            }
            set {
                this.addr1Field = value;
            }
        }
        
        /// <remarks/>
        public string Addr2 {
            get {
                return this.addr2Field;
            }
            set {
                this.addr2Field = value;
            }
        }
        
        /// <remarks/>
        public string BaseCuryID {
            get {
                return this.baseCuryIDField;
            }
            set {
                this.baseCuryIDField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string CpnyID {
            get {
                return this.cpnyIDField;
            }
            set {
                this.cpnyIDField = value;
            }
        }
        
        /// <remarks/>
        public string CpnyCOA {
            get {
                return this.cpnyCOAField;
            }
            set {
                this.cpnyCOAField = value;
            }
        }
        
        /// <remarks/>
        public string CpnySub {
            get {
                return this.cpnySubField;
            }
            set {
                this.cpnySubField = value;
            }
        }
        
        /// <remarks/>
        public string CpnyName {
            get {
                return this.cpnyNameField;
            }
            set {
                this.cpnyNameField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseName {
            get {
                return this.databaseNameField;
            }
            set {
                this.databaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string IASEmailAddress {
            get {
                return this.iASEmailAddressField;
            }
            set {
                this.iASEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string IASPubKey {
            get {
                return this.iASPubKeyField;
            }
            set {
                this.iASPubKeyField = value;
            }
        }
        
        /// <remarks/>
        public short IASPubKeySize {
            get {
                return this.iASPubKeySizeField;
            }
            set {
                this.iASPubKeySizeField = value;
            }
        }
        
        /// <remarks/>
        public short IASRemoteAccess {
            get {
                return this.iASRemoteAccessField;
            }
            set {
                this.iASRemoteAccessField = value;
            }
        }
        
        /// <remarks/>
        public string InterCpnyID {
            get {
                return this.interCpnyIDField;
            }
            set {
                this.interCpnyIDField = value;
            }
        }
        
        /// <remarks/>
        public short LocalDomain {
            get {
                return this.localDomainField;
            }
            set {
                this.localDomainField = value;
            }
        }
        
        /// <remarks/>
        public string Master_Fed_ID {
            get {
                return this.master_Fed_IDField;
            }
            set {
                this.master_Fed_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public double User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public double User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public int CpnyColor {
            get {
                return this.cpnyColorField;
            }
            set {
                this.cpnyColorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class LCCodeClass {
        
        private string errorMessageField;
        
        private string notesField;
        
        private int resultCodeField;
        
        private string allocMethodField;
        
        private string applMethodField;
        
        private System.DateTime crtd_DateTimeField;
        
        private string crtd_ProgField;
        
        private string crtd_UserField;
        
        private string descrField;
        
        private string lCClearAcctField;
        
        private string lCClearSubField;
        
        private string lCCodeField;
        
        private System.DateTime lUpd_DateTimeField;
        
        private string lUpd_ProgField;
        
        private string lUpd_UserField;
        
        private int noteIDField;
        
        private string reasonCdField;
        
        private string s4Future01Field;
        
        private string s4Future02Field;
        
        private double s4Future03Field;
        
        private double s4Future04Field;
        
        private double s4Future05Field;
        
        private double s4Future06Field;
        
        private System.DateTime s4Future07Field;
        
        private System.DateTime s4Future08Field;
        
        private int s4Future09Field;
        
        private int s4Future10Field;
        
        private string s4Future11Field;
        
        private string s4Future12Field;
        
        private string termsIDField;
        
        private string user1Field;
        
        private System.DateTime user10Field;
        
        private string user2Field;
        
        private string user3Field;
        
        private string user4Field;
        
        private double user5Field;
        
        private double user6Field;
        
        private string user7Field;
        
        private string user8Field;
        
        private System.DateTime user9Field;
        
        private string vendIDField;
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AllocMethod {
            get {
                return this.allocMethodField;
            }
            set {
                this.allocMethodField = value;
            }
        }
        
        /// <remarks/>
        public string ApplMethod {
            get {
                return this.applMethodField;
            }
            set {
                this.applMethodField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Crtd_DateTime {
            get {
                return this.crtd_DateTimeField;
            }
            set {
                this.crtd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_Prog {
            get {
                return this.crtd_ProgField;
            }
            set {
                this.crtd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string Crtd_User {
            get {
                return this.crtd_UserField;
            }
            set {
                this.crtd_UserField = value;
            }
        }
        
        /// <remarks/>
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        public string LCClearAcct {
            get {
                return this.lCClearAcctField;
            }
            set {
                this.lCClearAcctField = value;
            }
        }
        
        /// <remarks/>
        public string LCClearSub {
            get {
                return this.lCClearSubField;
            }
            set {
                this.lCClearSubField = value;
            }
        }
        
        /// <remarks/>
        public string LCCode {
            get {
                return this.lCCodeField;
            }
            set {
                this.lCCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LUpd_DateTime {
            get {
                return this.lUpd_DateTimeField;
            }
            set {
                this.lUpd_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_Prog {
            get {
                return this.lUpd_ProgField;
            }
            set {
                this.lUpd_ProgField = value;
            }
        }
        
        /// <remarks/>
        public string LUpd_User {
            get {
                return this.lUpd_UserField;
            }
            set {
                this.lUpd_UserField = value;
            }
        }
        
        /// <remarks/>
        public int NoteID {
            get {
                return this.noteIDField;
            }
            set {
                this.noteIDField = value;
            }
        }
        
        /// <remarks/>
        public string ReasonCd {
            get {
                return this.reasonCdField;
            }
            set {
                this.reasonCdField = value;
            }
        }
        
        /// <remarks/>
        public string S4Future01 {
            get {
                return this.s4Future01Field;
            }
            set {
                this.s4Future01Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future02 {
            get {
                return this.s4Future02Field;
            }
            set {
                this.s4Future02Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future03 {
            get {
                return this.s4Future03Field;
            }
            set {
                this.s4Future03Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future04 {
            get {
                return this.s4Future04Field;
            }
            set {
                this.s4Future04Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future05 {
            get {
                return this.s4Future05Field;
            }
            set {
                this.s4Future05Field = value;
            }
        }
        
        /// <remarks/>
        public double S4Future06 {
            get {
                return this.s4Future06Field;
            }
            set {
                this.s4Future06Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future07 {
            get {
                return this.s4Future07Field;
            }
            set {
                this.s4Future07Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime S4Future08 {
            get {
                return this.s4Future08Field;
            }
            set {
                this.s4Future08Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future09 {
            get {
                return this.s4Future09Field;
            }
            set {
                this.s4Future09Field = value;
            }
        }
        
        /// <remarks/>
        public int S4Future10 {
            get {
                return this.s4Future10Field;
            }
            set {
                this.s4Future10Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future11 {
            get {
                return this.s4Future11Field;
            }
            set {
                this.s4Future11Field = value;
            }
        }
        
        /// <remarks/>
        public string S4Future12 {
            get {
                return this.s4Future12Field;
            }
            set {
                this.s4Future12Field = value;
            }
        }
        
        /// <remarks/>
        public string TermsID {
            get {
                return this.termsIDField;
            }
            set {
                this.termsIDField = value;
            }
        }
        
        /// <remarks/>
        public string User1 {
            get {
                return this.user1Field;
            }
            set {
                this.user1Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User10 {
            get {
                return this.user10Field;
            }
            set {
                this.user10Field = value;
            }
        }
        
        /// <remarks/>
        public string User2 {
            get {
                return this.user2Field;
            }
            set {
                this.user2Field = value;
            }
        }
        
        /// <remarks/>
        public string User3 {
            get {
                return this.user3Field;
            }
            set {
                this.user3Field = value;
            }
        }
        
        /// <remarks/>
        public string User4 {
            get {
                return this.user4Field;
            }
            set {
                this.user4Field = value;
            }
        }
        
        /// <remarks/>
        public double User5 {
            get {
                return this.user5Field;
            }
            set {
                this.user5Field = value;
            }
        }
        
        /// <remarks/>
        public double User6 {
            get {
                return this.user6Field;
            }
            set {
                this.user6Field = value;
            }
        }
        
        /// <remarks/>
        public string User7 {
            get {
                return this.user7Field;
            }
            set {
                this.user7Field = value;
            }
        }
        
        /// <remarks/>
        public string User8 {
            get {
                return this.user8Field;
            }
            set {
                this.user8Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime User9 {
            get {
                return this.user9Field;
            }
            set {
                this.user9Field = value;
            }
        }
        
        /// <remarks/>
        public string VendID {
            get {
                return this.vendIDField;
            }
            set {
                this.vendIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.catalinatechnology.com/services/ctDynamicsSL")]
    public partial class nameValuePairs {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getLCCodesCompletedEventHandler(object sender, getLCCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLCCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLCCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LCCodeClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LCCodeClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getLCCodesAsDataSetCompletedEventHandler(object sender, getLCCodesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLCCodesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLCCodesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void aboutCompletedEventHandler(object sender, aboutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aboutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aboutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCompaniesAsDataSetCompletedEventHandler(object sender, getCompaniesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompaniesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompaniesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewcompanyCompletedEventHandler(object sender, getNewcompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewcompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewcompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public company Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((company)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCompaniesCompletedEventHandler(object sender, getCompaniesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editVendorCompletedEventHandler(object sender, editVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editVendorAsDataSetCompletedEventHandler(object sender, editVendorAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editVendorAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editVendorAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewVendorCompletedEventHandler(object sender, getNewVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getVendorsCompletedEventHandler(object sender, getVendorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVendorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVendorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getVendorsAsDataSetXMLCompletedEventHandler(object sender, getVendorsAsDataSetXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVendorsAsDataSetXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVendorsAsDataSetXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getVendorsAsDataSetCompletedEventHandler(object sender, getVendorsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVendorsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVendorsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSnoteCompletedEventHandler(object sender, editSnoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSnoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSnoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSnoteAsDataSetCompletedEventHandler(object sender, editSnoteAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSnoteAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSnoteAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void linkSnoteAsDataSetCompletedEventHandler(object sender, linkSnoteAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class linkSnoteAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal linkSnoteAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewSnoteCompletedEventHandler(object sender, getNewSnoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewSnoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewSnoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSnotesCompletedEventHandler(object sender, getSnotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSnotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSnotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Snote[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Snote[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSnotesAsDataSetCompletedEventHandler(object sender, getSnotesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSnotesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSnotesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getLOVByTypeAsDataSetCompletedEventHandler(object sender, getLOVByTypeAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLOVByTypeAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLOVByTypeAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNextCounterCompletedEventHandler(object sender, getNextCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void customSQLCallCompletedEventHandler(object sender, customSQLCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customSQLCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customSQLCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void customSQLCallAsXmlDocumentCompletedEventHandler(object sender, customSQLCallAsXmlDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customSQLCallAsXmlDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customSQLCallAsXmlDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void customSQLCallAlternateConnectionCompletedEventHandler(object sender, customSQLCallAlternateConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customSQLCallAlternateConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customSQLCallAlternateConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void customSQLCallAlternateConnectionAsXmlDocumentCompletedEventHandler(object sender, customSQLCallAlternateConnectionAsXmlDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class customSQLCallAlternateConnectionAsXmlDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal customSQLCallAlternateConnectionAsXmlDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSalespersonCompletedEventHandler(object sender, editSalespersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSalespersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSalespersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Salesperson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Salesperson)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSalespersonAsDataSetCompletedEventHandler(object sender, editSalespersonAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSalespersonAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSalespersonAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewSalespersonCompletedEventHandler(object sender, getNewSalespersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewSalespersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewSalespersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Salesperson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Salesperson)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSalespersonsCompletedEventHandler(object sender, getSalespersonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSalespersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSalespersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Salesperson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Salesperson[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSalespersonsAsDataSetCompletedEventHandler(object sender, getSalespersonsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSalespersonsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSalespersonsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSalesTaxesCompletedEventHandler(object sender, getSalesTaxesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSalesTaxesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSalesTaxesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTax[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTax[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSalesTaxesAsDataSetCompletedEventHandler(object sender, getSalesTaxesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSalesTaxesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSalesTaxesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editStateCompletedEventHandler(object sender, editStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public State Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((State)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editStateAsDataSetCompletedEventHandler(object sender, editStateAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editStateAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editStateAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewStateCompletedEventHandler(object sender, getNewStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public State Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((State)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getStatesCompletedEventHandler(object sender, getStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public State[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((State[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getStatesAsDataSetCompletedEventHandler(object sender, getStatesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editCountryCompletedEventHandler(object sender, editCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editCountryAsDataSetCompletedEventHandler(object sender, editCountryAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editCountryAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editCountryAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewCountryCompletedEventHandler(object sender, getNewCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCountriesCompletedEventHandler(object sender, getCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCountriesAsDataSetCompletedEventHandler(object sender, getCountriesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountriesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountriesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSegDefCompletedEventHandler(object sender, editSegDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSegDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSegDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SegDef Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SegDef)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSegDefAsDataSetCompletedEventHandler(object sender, editSegDefAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSegDefAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSegDefAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewSegDefCompletedEventHandler(object sender, getNewSegDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewSegDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewSegDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SegDef Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SegDef)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSegDefsCompletedEventHandler(object sender, getSegDefsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSegDefsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSegDefsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SegDef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SegDef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSegDefsAsDataSetCompletedEventHandler(object sender, getSegDefsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSegDefsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSegDefsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editAccountCompletedEventHandler(object sender, editAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editAccountAsDataSetCompletedEventHandler(object sender, editAccountAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editAccountAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editAccountAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewAccountCompletedEventHandler(object sender, getNewAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAccountsCompletedEventHandler(object sender, getAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAccountsAsDataSetCompletedEventHandler(object sender, getAccountsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSubAcctCompletedEventHandler(object sender, editSubAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSubAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSubAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubAcct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubAcct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSubAcctAsDataSetCompletedEventHandler(object sender, editSubAcctAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSubAcctAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSubAcctAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewSubAcctCompletedEventHandler(object sender, getNewSubAcctCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewSubAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewSubAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubAcct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubAcct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSubAcctsCompletedEventHandler(object sender, getSubAcctsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubAcctsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubAcctsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubAcct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubAcct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSubAcctsAsDataSetCompletedEventHandler(object sender, getSubAcctsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubAcctsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubAcctsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editBatchCompletedEventHandler(object sender, editBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editBatchAsDataSetCompletedEventHandler(object sender, editBatchAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editBatchAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editBatchAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewBatchCompletedEventHandler(object sender, getNewBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getBatchesCompletedEventHandler(object sender, getBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getBatchesAsDataSetCompletedEventHandler(object sender, getBatchesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editTermsCompletedEventHandler(object sender, editTermsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTermsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTermsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Terms Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Terms)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editTermsAsDataSetCompletedEventHandler(object sender, editTermsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTermsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTermsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewTermsCompletedEventHandler(object sender, getNewTermsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewTermsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewTermsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Terms Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Terms)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getTermsCompletedEventHandler(object sender, getTermsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTermsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTermsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Terms[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Terms[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getTermsAsDataSetCompletedEventHandler(object sender, getTermsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTermsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTermsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSlsTaxCatCompletedEventHandler(object sender, editSlsTaxCatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSlsTaxCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSlsTaxCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SlsTaxCat Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SlsTaxCat)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSlsTaxCatAsDataSetCompletedEventHandler(object sender, editSlsTaxCatAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSlsTaxCatAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSlsTaxCatAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewSlsTaxCatCompletedEventHandler(object sender, getNewSlsTaxCatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewSlsTaxCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewSlsTaxCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SlsTaxCat Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SlsTaxCat)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSlsTaxCatsCompletedEventHandler(object sender, getSlsTaxCatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSlsTaxCatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSlsTaxCatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SlsTaxCat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SlsTaxCat[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSlsTaxCatsAsDataSetCompletedEventHandler(object sender, getSlsTaxCatsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSlsTaxCatsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSlsTaxCatsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editAcctXrefCompletedEventHandler(object sender, editAcctXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editAcctXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editAcctXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcctXref Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcctXref)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editAcctXrefAsDataSetCompletedEventHandler(object sender, editAcctXrefAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editAcctXrefAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editAcctXrefAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewAcctXrefCompletedEventHandler(object sender, getNewAcctXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewAcctXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewAcctXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcctXref Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcctXref)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAcctXrefsCompletedEventHandler(object sender, getAcctXrefsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAcctXrefsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAcctXrefsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AcctXref[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AcctXref[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getAcctXrefsAsDataSetCompletedEventHandler(object sender, getAcctXrefsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAcctXrefsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAcctXrefsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSubXrefCompletedEventHandler(object sender, editSubXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSubXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSubXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubXref Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubXref)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editSubXrefAsDataSetCompletedEventHandler(object sender, editSubXrefAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editSubXrefAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editSubXrefAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewSubXrefCompletedEventHandler(object sender, getNewSubXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewSubXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewSubXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubXref Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubXref)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSubXrefsCompletedEventHandler(object sender, getSubXrefsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubXrefsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubXrefsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubXref[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubXref[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSubXrefsAsDataSetCompletedEventHandler(object sender, getSubXrefsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubXrefsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubXrefsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editLCCodeCompletedEventHandler(object sender, editLCCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editLCCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editLCCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LCCodeClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LCCodeClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void editLCCodeAsDataSetCompletedEventHandler(object sender, editLCCodeAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editLCCodeAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editLCCodeAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getNewLCCodeCompletedEventHandler(object sender, getNewLCCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewLCCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewLCCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LCCodeClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LCCodeClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void pingCompletedEventHandler(object sender, pingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591